{
	"id": "5e9c163135a42574c891c62fe58232df",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"SwapToken.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.1;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract SwapContract is Ownable {\n    using SafeMath for uint256;\n    address public _tokenA;\n    address public _tokenB;\n    uint256 public _fixedPrice;\n    event Swap(uint256 amountA, uint256 amountB);\n\n    constructor() {}\n\n    function SwapTokenAToB(uint256 _amountA) external {\n        require(\n            IERC20(_tokenA).balanceOf(msg.sender) >= _amountA,\n            \"User doesn't have enough token\"\n        );\n\n        uint256 amountOut = _amountA.mul(_fixedPrice).div(100);\n        require(\n            IERC20(_tokenB).balanceOf(address(this)) >= amountOut,\n            \"Contract doesn't have enough token\"\n        );\n\n        IERC20(_tokenA).transferFrom(msg.sender, address(this), _amountA);\n\n        IERC20(_tokenB).transfer(msg.sender, amountOut);\n        emit Swap(_amountA, amountOut);\n    }\n\n    function setAddressTokenA(address tokenA) external onlyOwner {\n        _tokenA = tokenA;\n    }\n\n    function setAddressTokenB(address tokenB) external onlyOwner {\n        _tokenB = tokenB;\n    }\n\n    function setFixedPrice(uint256 fixedPrice) external onlyOwner {\n        _fixedPrice = fixedPrice;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH3 0x45A187 CALLDATALOAD EQ SLT DUP2 PUSH21 0x8AEC4A20E7C2295C1EAAEA54CC6B0412F32D5DB605 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH3 0x45A187 CALLDATALOAD EQ SLT DUP2 PUSH21 0x8AEC4A20E7C2295C1EAAEA54CC6B0412F32D5DB605 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SwapToken.sol": {
				"SwapContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountA",
									"type": "uint256"
								}
							],
							"name": "SwapTokenAToB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_fixedPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_tokenA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_tokenB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								}
							],
							"name": "setAddressTokenA",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "setAddressTokenB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "fixedPrice",
									"type": "uint256"
								}
							],
							"name": "setFixedPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SwapToken.sol\":232:1351  contract SwapContract is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"SwapToken.sol\":442:458  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"SwapToken.sol\":232:1351  contract SwapContract is Ownable {... */\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"SwapToken.sol\":232:1351  contract SwapContract is Ownable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SwapToken.sol\":232:1351  contract SwapContract is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9f0f2524\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x9f0f2524\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xcbb2a348\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xea74d020\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf3c4469f\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x04ba7f29\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5432d7f4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x73c8c883\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"SwapToken.sol\":331:353  address public _tokenB */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SwapToken.sol\":359:385  uint256 public _fixedPrice */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      stop\n        /* \"SwapToken.sol\":1246:1349  function setFixedPrice(uint256 fixedPrice) external onlyOwner {... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SwapToken.sol\":464:1040  function SwapTokenAToB(uint256 _amountA) external {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      stop\n        /* \"SwapToken.sol\":1046:1140  function setAddressTokenA(address tokenA) external onlyOwner {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"SwapToken.sol\":1146:1240  function setAddressTokenB(address tokenB) external onlyOwner {... */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"SwapToken.sol\":303:325  address public _tokenA */\n    tag_12:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SwapToken.sol\":331:353  address public _tokenB */\n    tag_15:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"SwapToken.sol\":359:385  uint256 public _fixedPrice */\n    tag_19:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"SwapToken.sol\":1246:1349  function setFixedPrice(uint256 fixedPrice) external onlyOwner {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_54:\n        /* \"SwapToken.sol\":1332:1342  fixedPrice */\n      dup1\n        /* \"SwapToken.sol\":1318:1329  _fixedPrice */\n      0x03\n        /* \"SwapToken.sol\":1318:1342  _fixedPrice = fixedPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SwapToken.sol\":1246:1349  function setFixedPrice(uint256 fixedPrice) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"SwapToken.sol\":464:1040  function SwapTokenAToB(uint256 _amountA) external {... */\n    tag_33:\n        /* \"SwapToken.sol\":586:594  _amountA */\n      dup1\n        /* \"SwapToken.sol\":552:559  _tokenA */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SwapToken.sol\":545:570  IERC20(_tokenA).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"SwapToken.sol\":571:581  msg.sender */\n      caller\n        /* \"SwapToken.sol\":545:582  IERC20(_tokenA).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_58:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"SwapToken.sol\":545:594  IERC20(_tokenA).balanceOf(msg.sender) >= _amountA */\n      lt\n      iszero\n        /* \"SwapToken.sol\":524:650  require(... */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"SwapToken.sol\":661:678  uint256 amountOut */\n      0x00\n        /* \"SwapToken.sol\":681:715  _amountA.mul(_fixedPrice).div(100) */\n      tag_67\n        /* \"SwapToken.sol\":711:714  100 */\n      0x64\n        /* \"SwapToken.sol\":681:706  _amountA.mul(_fixedPrice) */\n      tag_68\n        /* \"SwapToken.sol\":694:705  _fixedPrice */\n      sload(0x03)\n        /* \"SwapToken.sol\":681:689  _amountA */\n      dup6\n        /* \"SwapToken.sol\":681:693  _amountA.mul */\n      tag_69\n      swap1\n        /* \"SwapToken.sol\":681:706  _amountA.mul(_fixedPrice) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_68:\n        /* \"SwapToken.sol\":681:710  _amountA.mul(_fixedPrice).div */\n      tag_70\n      swap1\n        /* \"SwapToken.sol\":681:715  _amountA.mul(_fixedPrice).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"SwapToken.sol\":661:715  uint256 amountOut = _amountA.mul(_fixedPrice).div(100) */\n      swap1\n      pop\n        /* \"SwapToken.sol\":790:799  amountOut */\n      dup1\n        /* \"SwapToken.sol\":753:760  _tokenB */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SwapToken.sol\":746:771  IERC20(_tokenB).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"SwapToken.sol\":780:784  this */\n      address\n        /* \"SwapToken.sol\":746:786  IERC20(_tokenB).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_71:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_75:\n        /* \"SwapToken.sol\":746:799  IERC20(_tokenB).balanceOf(address(this)) >= amountOut */\n      lt\n      iszero\n        /* \"SwapToken.sol\":725:859  require(... */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"SwapToken.sol\":877:884  _tokenA */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SwapToken.sol\":870:898  IERC20(_tokenA).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"SwapToken.sol\":899:909  msg.sender */\n      caller\n        /* \"SwapToken.sol\":919:923  this */\n      address\n        /* \"SwapToken.sol\":926:934  _amountA */\n      dup6\n        /* \"SwapToken.sol\":870:935  IERC20(_tokenA).transferFrom(msg.sender, address(this), _amountA) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      pop\n        /* \"SwapToken.sol\":953:960  _tokenB */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SwapToken.sol\":946:970  IERC20(_tokenB).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"SwapToken.sol\":971:981  msg.sender */\n      caller\n        /* \"SwapToken.sol\":983:992  amountOut */\n      dup4\n        /* \"SwapToken.sol\":946:993  IERC20(_tokenB).transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap3\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_91:\n      pop\n        /* \"SwapToken.sol\":1008:1033  Swap(_amountA, amountOut) */\n      0x015fc8ee969fd902d9ebd12a31c54446400a2b512a405366fe14defd6081d220\n        /* \"SwapToken.sol\":1013:1021  _amountA */\n      dup3\n        /* \"SwapToken.sol\":1023:1032  amountOut */\n      dup3\n        /* \"SwapToken.sol\":1008:1033  Swap(_amountA, amountOut) */\n      mload(0x40)\n      tag_92\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"SwapToken.sol\":514:1040  {... */\n      pop\n        /* \"SwapToken.sol\":464:1040  function SwapTokenAToB(uint256 _amountA) external {... */\n      pop\n      jump\t// out\n        /* \"SwapToken.sol\":1046:1140  function setAddressTokenA(address tokenA) external onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_95:\n        /* \"SwapToken.sol\":1127:1133  tokenA */\n      dup1\n        /* \"SwapToken.sol\":1117:1124  _tokenA */\n      0x01\n      0x00\n        /* \"SwapToken.sol\":1117:1133  _tokenA = tokenA */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SwapToken.sol\":1046:1140  function setAddressTokenA(address tokenA) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"SwapToken.sol\":1146:1240  function setAddressTokenB(address tokenB) external onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_98:\n        /* \"SwapToken.sol\":1227:1233  tokenB */\n      dup1\n        /* \"SwapToken.sol\":1217:1224  _tokenB */\n      0x02\n      0x00\n        /* \"SwapToken.sol\":1217:1233  _tokenB = tokenB */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SwapToken.sol\":1146:1240  function setAddressTokenB(address tokenB) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"SwapToken.sol\":303:325  address public _tokenA */\n    tag_45:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_29\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_123:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_125\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_127:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_129\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_131:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_133\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_135:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_137\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_134\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_36:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":665:784   */\n    tag_139:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_142\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_123\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_85:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_145\n      tag_141\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1008:1127   */\n    tag_144:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_146\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_127\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_26:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_149\n      tag_141\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1351:1470   */\n    tag_148:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_150\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_131\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_63:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_153\n      tag_141\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1697:1816   */\n    tag_152:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_154\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_135\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2085   */\n    tag_155:\n        /* \"#utility.yul\":2054:2078   */\n      tag_157\n        /* \"#utility.yul\":2072:2077   */\n      dup2\n        /* \"#utility.yul\":2054:2078   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2049:2052   */\n      dup3\n        /* \"#utility.yul\":2042:2079   */\n      mstore\n        /* \"#utility.yul\":1967:2085   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2457   */\n    tag_159:\n        /* \"#utility.yul\":2233:2236   */\n      0x00\n        /* \"#utility.yul\":2254:2321   */\n      tag_161\n        /* \"#utility.yul\":2318:2320   */\n      0x26\n        /* \"#utility.yul\":2313:2316   */\n      dup4\n        /* \"#utility.yul\":2254:2321   */\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2247:2321   */\n      swap2\n      pop\n        /* \"#utility.yul\":2330:2423   */\n      tag_163\n        /* \"#utility.yul\":2419:2422   */\n      dup3\n        /* \"#utility.yul\":2330:2423   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2448:2450   */\n      0x40\n        /* \"#utility.yul\":2443:2446   */\n      dup3\n        /* \"#utility.yul\":2439:2451   */\n      add\n        /* \"#utility.yul\":2432:2451   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2463:2829   */\n    tag_165:\n        /* \"#utility.yul\":2605:2608   */\n      0x00\n        /* \"#utility.yul\":2626:2693   */\n      tag_167\n        /* \"#utility.yul\":2690:2692   */\n      0x22\n        /* \"#utility.yul\":2685:2688   */\n      dup4\n        /* \"#utility.yul\":2626:2693   */\n      tag_162\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2619:2693   */\n      swap2\n      pop\n        /* \"#utility.yul\":2702:2795   */\n      tag_168\n        /* \"#utility.yul\":2791:2794   */\n      dup3\n        /* \"#utility.yul\":2702:2795   */\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2820:2822   */\n      0x40\n        /* \"#utility.yul\":2815:2818   */\n      dup3\n        /* \"#utility.yul\":2811:2823   */\n      add\n        /* \"#utility.yul\":2804:2823   */\n      swap1\n      pop\n        /* \"#utility.yul\":2463:2829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2835:3201   */\n    tag_170:\n        /* \"#utility.yul\":2977:2980   */\n      0x00\n        /* \"#utility.yul\":2998:3065   */\n      tag_172\n        /* \"#utility.yul\":3062:3064   */\n      0x20\n        /* \"#utility.yul\":3057:3060   */\n      dup4\n        /* \"#utility.yul\":2998:3065   */\n      tag_162\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2991:3065   */\n      swap2\n      pop\n        /* \"#utility.yul\":3074:3167   */\n      tag_173\n        /* \"#utility.yul\":3163:3166   */\n      dup3\n        /* \"#utility.yul\":3074:3167   */\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3192:3194   */\n      0x20\n        /* \"#utility.yul\":3187:3190   */\n      dup3\n        /* \"#utility.yul\":3183:3195   */\n      add\n        /* \"#utility.yul\":3176:3195   */\n      swap1\n      pop\n        /* \"#utility.yul\":2835:3201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3207:3573   */\n    tag_175:\n        /* \"#utility.yul\":3349:3352   */\n      0x00\n        /* \"#utility.yul\":3370:3437   */\n      tag_177\n        /* \"#utility.yul\":3434:3436   */\n      0x1e\n        /* \"#utility.yul\":3429:3432   */\n      dup4\n        /* \"#utility.yul\":3370:3437   */\n      tag_162\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3363:3437   */\n      swap2\n      pop\n        /* \"#utility.yul\":3446:3539   */\n      tag_178\n        /* \"#utility.yul\":3535:3538   */\n      dup3\n        /* \"#utility.yul\":3446:3539   */\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3564:3566   */\n      0x20\n        /* \"#utility.yul\":3559:3562   */\n      dup3\n        /* \"#utility.yul\":3555:3567   */\n      add\n        /* \"#utility.yul\":3548:3567   */\n      swap1\n      pop\n        /* \"#utility.yul\":3207:3573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3579:3697   */\n    tag_180:\n        /* \"#utility.yul\":3666:3690   */\n      tag_182\n        /* \"#utility.yul\":3684:3689   */\n      dup2\n        /* \"#utility.yul\":3666:3690   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3661:3664   */\n      dup3\n        /* \"#utility.yul\":3654:3691   */\n      mstore\n        /* \"#utility.yul\":3579:3697   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3703:3925   */\n    tag_17:\n        /* \"#utility.yul\":3796:3800   */\n      0x00\n        /* \"#utility.yul\":3834:3836   */\n      0x20\n        /* \"#utility.yul\":3823:3832   */\n      dup3\n        /* \"#utility.yul\":3819:3837   */\n      add\n        /* \"#utility.yul\":3811:3837   */\n      swap1\n      pop\n        /* \"#utility.yul\":3847:3918   */\n      tag_185\n        /* \"#utility.yul\":3915:3916   */\n      0x00\n        /* \"#utility.yul\":3904:3913   */\n      dup4\n        /* \"#utility.yul\":3900:3917   */\n      add\n        /* \"#utility.yul\":3891:3897   */\n      dup5\n        /* \"#utility.yul\":3847:3918   */\n      tag_155\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3703:3925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3931:4373   */\n    tag_80:\n        /* \"#utility.yul\":4080:4084   */\n      0x00\n        /* \"#utility.yul\":4118:4120   */\n      0x60\n        /* \"#utility.yul\":4107:4116   */\n      dup3\n        /* \"#utility.yul\":4103:4121   */\n      add\n        /* \"#utility.yul\":4095:4121   */\n      swap1\n      pop\n        /* \"#utility.yul\":4131:4202   */\n      tag_187\n        /* \"#utility.yul\":4199:4200   */\n      0x00\n        /* \"#utility.yul\":4188:4197   */\n      dup4\n        /* \"#utility.yul\":4184:4201   */\n      add\n        /* \"#utility.yul\":4175:4181   */\n      dup7\n        /* \"#utility.yul\":4131:4202   */\n      tag_155\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4212:4284   */\n      tag_188\n        /* \"#utility.yul\":4280:4282   */\n      0x20\n        /* \"#utility.yul\":4269:4278   */\n      dup4\n        /* \"#utility.yul\":4265:4283   */\n      add\n        /* \"#utility.yul\":4256:4262   */\n      dup6\n        /* \"#utility.yul\":4212:4284   */\n      tag_155\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":4294:4366   */\n      tag_189\n        /* \"#utility.yul\":4362:4364   */\n      0x40\n        /* \"#utility.yul\":4351:4360   */\n      dup4\n        /* \"#utility.yul\":4347:4365   */\n      add\n        /* \"#utility.yul\":4338:4344   */\n      dup5\n        /* \"#utility.yul\":4294:4366   */\n      tag_180\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3931:4373   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4379:4711   */\n    tag_87:\n        /* \"#utility.yul\":4500:4504   */\n      0x00\n        /* \"#utility.yul\":4538:4540   */\n      0x40\n        /* \"#utility.yul\":4527:4536   */\n      dup3\n        /* \"#utility.yul\":4523:4541   */\n      add\n        /* \"#utility.yul\":4515:4541   */\n      swap1\n      pop\n        /* \"#utility.yul\":4551:4622   */\n      tag_191\n        /* \"#utility.yul\":4619:4620   */\n      0x00\n        /* \"#utility.yul\":4608:4617   */\n      dup4\n        /* \"#utility.yul\":4604:4621   */\n      add\n        /* \"#utility.yul\":4595:4601   */\n      dup6\n        /* \"#utility.yul\":4551:4622   */\n      tag_155\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4632:4704   */\n      tag_192\n        /* \"#utility.yul\":4700:4702   */\n      0x20\n        /* \"#utility.yul\":4689:4698   */\n      dup4\n        /* \"#utility.yul\":4685:4703   */\n      add\n        /* \"#utility.yul\":4676:4682   */\n      dup5\n        /* \"#utility.yul\":4632:4704   */\n      tag_180\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4379:4711   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4717:5136   */\n    tag_105:\n        /* \"#utility.yul\":4883:4887   */\n      0x00\n        /* \"#utility.yul\":4921:4923   */\n      0x20\n        /* \"#utility.yul\":4910:4919   */\n      dup3\n        /* \"#utility.yul\":4906:4924   */\n      add\n        /* \"#utility.yul\":4898:4924   */\n      swap1\n      pop\n        /* \"#utility.yul\":4970:4979   */\n      dup2\n        /* \"#utility.yul\":4964:4968   */\n      dup2\n        /* \"#utility.yul\":4960:4980   */\n      sub\n        /* \"#utility.yul\":4956:4957   */\n      0x00\n        /* \"#utility.yul\":4945:4954   */\n      dup4\n        /* \"#utility.yul\":4941:4958   */\n      add\n        /* \"#utility.yul\":4934:4981   */\n      mstore\n        /* \"#utility.yul\":4998:5129   */\n      tag_194\n        /* \"#utility.yul\":5124:5128   */\n      dup2\n        /* \"#utility.yul\":4998:5129   */\n      tag_159\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4990:5129   */\n      swap1\n      pop\n        /* \"#utility.yul\":4717:5136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5142:5561   */\n    tag_78:\n        /* \"#utility.yul\":5308:5312   */\n      0x00\n        /* \"#utility.yul\":5346:5348   */\n      0x20\n        /* \"#utility.yul\":5335:5344   */\n      dup3\n        /* \"#utility.yul\":5331:5349   */\n      add\n        /* \"#utility.yul\":5323:5349   */\n      swap1\n      pop\n        /* \"#utility.yul\":5395:5404   */\n      dup2\n        /* \"#utility.yul\":5389:5393   */\n      dup2\n        /* \"#utility.yul\":5385:5405   */\n      sub\n        /* \"#utility.yul\":5381:5382   */\n      0x00\n        /* \"#utility.yul\":5370:5379   */\n      dup4\n        /* \"#utility.yul\":5366:5383   */\n      add\n        /* \"#utility.yul\":5359:5406   */\n      mstore\n        /* \"#utility.yul\":5423:5554   */\n      tag_196\n        /* \"#utility.yul\":5549:5553   */\n      dup2\n        /* \"#utility.yul\":5423:5554   */\n      tag_165\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":5415:5554   */\n      swap1\n      pop\n        /* \"#utility.yul\":5142:5561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5567:5986   */\n    tag_113:\n        /* \"#utility.yul\":5733:5737   */\n      0x00\n        /* \"#utility.yul\":5771:5773   */\n      0x20\n        /* \"#utility.yul\":5760:5769   */\n      dup3\n        /* \"#utility.yul\":5756:5774   */\n      add\n        /* \"#utility.yul\":5748:5774   */\n      swap1\n      pop\n        /* \"#utility.yul\":5820:5829   */\n      dup2\n        /* \"#utility.yul\":5814:5818   */\n      dup2\n        /* \"#utility.yul\":5810:5830   */\n      sub\n        /* \"#utility.yul\":5806:5807   */\n      0x00\n        /* \"#utility.yul\":5795:5804   */\n      dup4\n        /* \"#utility.yul\":5791:5808   */\n      add\n        /* \"#utility.yul\":5784:5831   */\n      mstore\n        /* \"#utility.yul\":5848:5979   */\n      tag_198\n        /* \"#utility.yul\":5974:5978   */\n      dup2\n        /* \"#utility.yul\":5848:5979   */\n      tag_170\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5840:5979   */\n      swap1\n      pop\n        /* \"#utility.yul\":5567:5986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5992:6411   */\n    tag_66:\n        /* \"#utility.yul\":6158:6162   */\n      0x00\n        /* \"#utility.yul\":6196:6198   */\n      0x20\n        /* \"#utility.yul\":6185:6194   */\n      dup3\n        /* \"#utility.yul\":6181:6199   */\n      add\n        /* \"#utility.yul\":6173:6199   */\n      swap1\n      pop\n        /* \"#utility.yul\":6245:6254   */\n      dup2\n        /* \"#utility.yul\":6239:6243   */\n      dup2\n        /* \"#utility.yul\":6235:6255   */\n      sub\n        /* \"#utility.yul\":6231:6232   */\n      0x00\n        /* \"#utility.yul\":6220:6229   */\n      dup4\n        /* \"#utility.yul\":6216:6233   */\n      add\n        /* \"#utility.yul\":6209:6256   */\n      mstore\n        /* \"#utility.yul\":6273:6404   */\n      tag_200\n        /* \"#utility.yul\":6399:6403   */\n      dup2\n        /* \"#utility.yul\":6273:6404   */\n      tag_175\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":6265:6404   */\n      swap1\n      pop\n        /* \"#utility.yul\":5992:6411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6417:6639   */\n    tag_21:\n        /* \"#utility.yul\":6510:6514   */\n      0x00\n        /* \"#utility.yul\":6548:6550   */\n      0x20\n        /* \"#utility.yul\":6537:6546   */\n      dup3\n        /* \"#utility.yul\":6533:6551   */\n      add\n        /* \"#utility.yul\":6525:6551   */\n      swap1\n      pop\n        /* \"#utility.yul\":6561:6632   */\n      tag_202\n        /* \"#utility.yul\":6629:6630   */\n      0x00\n        /* \"#utility.yul\":6618:6627   */\n      dup4\n        /* \"#utility.yul\":6614:6631   */\n      add\n        /* \"#utility.yul\":6605:6611   */\n      dup5\n        /* \"#utility.yul\":6561:6632   */\n      tag_180\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":6417:6639   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6645:6977   */\n    tag_93:\n        /* \"#utility.yul\":6766:6770   */\n      0x00\n        /* \"#utility.yul\":6804:6806   */\n      0x40\n        /* \"#utility.yul\":6793:6802   */\n      dup3\n        /* \"#utility.yul\":6789:6807   */\n      add\n        /* \"#utility.yul\":6781:6807   */\n      swap1\n      pop\n        /* \"#utility.yul\":6817:6888   */\n      tag_204\n        /* \"#utility.yul\":6885:6886   */\n      0x00\n        /* \"#utility.yul\":6874:6883   */\n      dup4\n        /* \"#utility.yul\":6870:6887   */\n      add\n        /* \"#utility.yul\":6861:6867   */\n      dup6\n        /* \"#utility.yul\":6817:6888   */\n      tag_180\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":6898:6970   */\n      tag_205\n        /* \"#utility.yul\":6966:6968   */\n      0x20\n        /* \"#utility.yul\":6955:6964   */\n      dup4\n        /* \"#utility.yul\":6951:6969   */\n      add\n        /* \"#utility.yul\":6942:6948   */\n      dup5\n        /* \"#utility.yul\":6898:6970   */\n      tag_180\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":6645:6977   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7064:7233   */\n    tag_162:\n        /* \"#utility.yul\":7148:7159   */\n      0x00\n        /* \"#utility.yul\":7182:7188   */\n      dup3\n        /* \"#utility.yul\":7177:7180   */\n      dup3\n        /* \"#utility.yul\":7170:7189   */\n      mstore\n        /* \"#utility.yul\":7222:7226   */\n      0x20\n        /* \"#utility.yul\":7217:7220   */\n      dup3\n        /* \"#utility.yul\":7213:7227   */\n      add\n        /* \"#utility.yul\":7198:7227   */\n      swap1\n      pop\n        /* \"#utility.yul\":7064:7233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7239:7424   */\n    tag_120:\n        /* \"#utility.yul\":7279:7280   */\n      0x00\n        /* \"#utility.yul\":7296:7316   */\n      tag_210\n        /* \"#utility.yul\":7314:7315   */\n      dup3\n        /* \"#utility.yul\":7296:7316   */\n      tag_183\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":7291:7316   */\n      swap2\n      pop\n        /* \"#utility.yul\":7330:7350   */\n      tag_211\n        /* \"#utility.yul\":7348:7349   */\n      dup4\n        /* \"#utility.yul\":7330:7350   */\n      tag_183\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":7325:7350   */\n      swap3\n      pop\n        /* \"#utility.yul\":7369:7370   */\n      dup3\n        /* \"#utility.yul\":7359:7394   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":7374:7392   */\n      tag_213\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":7359:7394   */\n    tag_212:\n        /* \"#utility.yul\":7416:7417   */\n      dup3\n        /* \"#utility.yul\":7413:7414   */\n      dup3\n        /* \"#utility.yul\":7409:7418   */\n      div\n        /* \"#utility.yul\":7404:7418   */\n      swap1\n      pop\n        /* \"#utility.yul\":7239:7424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7430:7778   */\n    tag_117:\n        /* \"#utility.yul\":7470:7477   */\n      0x00\n        /* \"#utility.yul\":7493:7513   */\n      tag_216\n        /* \"#utility.yul\":7511:7512   */\n      dup3\n        /* \"#utility.yul\":7493:7513   */\n      tag_183\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":7488:7513   */\n      swap2\n      pop\n        /* \"#utility.yul\":7527:7547   */\n      tag_217\n        /* \"#utility.yul\":7545:7546   */\n      dup4\n        /* \"#utility.yul\":7527:7547   */\n      tag_183\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":7522:7547   */\n      swap3\n      pop\n        /* \"#utility.yul\":7715:7716   */\n      dup2\n        /* \"#utility.yul\":7647:7713   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7643:7717   */\n      div\n        /* \"#utility.yul\":7640:7641   */\n      dup4\n        /* \"#utility.yul\":7637:7718   */\n      gt\n        /* \"#utility.yul\":7632:7633   */\n      dup3\n        /* \"#utility.yul\":7625:7634   */\n      iszero\n        /* \"#utility.yul\":7618:7635   */\n      iszero\n        /* \"#utility.yul\":7614:7719   */\n      and\n        /* \"#utility.yul\":7611:7742   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":7722:7740   */\n      tag_219\n      tag_220\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":7611:7742   */\n    tag_218:\n        /* \"#utility.yul\":7770:7771   */\n      dup3\n        /* \"#utility.yul\":7767:7768   */\n      dup3\n        /* \"#utility.yul\":7763:7772   */\n      mul\n        /* \"#utility.yul\":7752:7772   */\n      swap1\n      pop\n        /* \"#utility.yul\":7430:7778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7784:7880   */\n    tag_158:\n        /* \"#utility.yul\":7821:7828   */\n      0x00\n        /* \"#utility.yul\":7850:7874   */\n      tag_222\n        /* \"#utility.yul\":7868:7873   */\n      dup3\n        /* \"#utility.yul\":7850:7874   */\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":7839:7874   */\n      swap1\n      pop\n        /* \"#utility.yul\":7784:7880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7886:7976   */\n    tag_224:\n        /* \"#utility.yul\":7920:7927   */\n      0x00\n        /* \"#utility.yul\":7963:7968   */\n      dup2\n        /* \"#utility.yul\":7956:7969   */\n      iszero\n        /* \"#utility.yul\":7949:7970   */\n      iszero\n        /* \"#utility.yul\":7938:7970   */\n      swap1\n      pop\n        /* \"#utility.yul\":7886:7976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7982:8108   */\n    tag_223:\n        /* \"#utility.yul\":8019:8026   */\n      0x00\n        /* \"#utility.yul\":8059:8101   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8052:8057   */\n      dup3\n        /* \"#utility.yul\":8048:8102   */\n      and\n        /* \"#utility.yul\":8037:8102   */\n      swap1\n      pop\n        /* \"#utility.yul\":7982:8108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8114:8191   */\n    tag_183:\n        /* \"#utility.yul\":8151:8158   */\n      0x00\n        /* \"#utility.yul\":8180:8185   */\n      dup2\n        /* \"#utility.yul\":8169:8185   */\n      swap1\n      pop\n        /* \"#utility.yul\":8114:8191   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8197:8377   */\n    tag_220:\n        /* \"#utility.yul\":8245:8322   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8235:8323   */\n      mstore\n        /* \"#utility.yul\":8342:8346   */\n      0x11\n        /* \"#utility.yul\":8339:8340   */\n      0x04\n        /* \"#utility.yul\":8332:8347   */\n      mstore\n        /* \"#utility.yul\":8366:8370   */\n      0x24\n        /* \"#utility.yul\":8363:8364   */\n      0x00\n        /* \"#utility.yul\":8356:8371   */\n      revert\n        /* \"#utility.yul\":8383:8563   */\n    tag_214:\n        /* \"#utility.yul\":8431:8508   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8428:8429   */\n      0x00\n        /* \"#utility.yul\":8421:8509   */\n      mstore\n        /* \"#utility.yul\":8528:8532   */\n      0x12\n        /* \"#utility.yul\":8525:8526   */\n      0x04\n        /* \"#utility.yul\":8518:8533   */\n      mstore\n        /* \"#utility.yul\":8552:8556   */\n      0x24\n        /* \"#utility.yul\":8549:8550   */\n      0x00\n        /* \"#utility.yul\":8542:8557   */\n      revert\n        /* \"#utility.yul\":8692:8809   */\n    tag_141:\n        /* \"#utility.yul\":8801:8802   */\n      0x00\n        /* \"#utility.yul\":8798:8799   */\n      dup1\n        /* \"#utility.yul\":8791:8803   */\n      revert\n        /* \"#utility.yul\":8815:9040   */\n    tag_164:\n        /* \"#utility.yul\":8955:8989   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8951:8952   */\n      0x00\n        /* \"#utility.yul\":8943:8949   */\n      dup3\n        /* \"#utility.yul\":8939:8953   */\n      add\n        /* \"#utility.yul\":8932:8990   */\n      mstore\n        /* \"#utility.yul\":9024:9032   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9019:9021   */\n      0x20\n        /* \"#utility.yul\":9011:9017   */\n      dup3\n        /* \"#utility.yul\":9007:9022   */\n      add\n        /* \"#utility.yul\":9000:9033   */\n      mstore\n        /* \"#utility.yul\":8815:9040   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9046:9267   */\n    tag_169:\n        /* \"#utility.yul\":9186:9220   */\n      0x436f6e747261637420646f65736e2774206861766520656e6f75676820746f6b\n        /* \"#utility.yul\":9182:9183   */\n      0x00\n        /* \"#utility.yul\":9174:9180   */\n      dup3\n        /* \"#utility.yul\":9170:9184   */\n      add\n        /* \"#utility.yul\":9163:9221   */\n      mstore\n        /* \"#utility.yul\":9255:9259   */\n      0x656e000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9250:9252   */\n      0x20\n        /* \"#utility.yul\":9242:9248   */\n      dup3\n        /* \"#utility.yul\":9238:9253   */\n      add\n        /* \"#utility.yul\":9231:9260   */\n      mstore\n        /* \"#utility.yul\":9046:9267   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9273:9455   */\n    tag_174:\n        /* \"#utility.yul\":9413:9447   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9409:9410   */\n      0x00\n        /* \"#utility.yul\":9401:9407   */\n      dup3\n        /* \"#utility.yul\":9397:9411   */\n      add\n        /* \"#utility.yul\":9390:9448   */\n      mstore\n        /* \"#utility.yul\":9273:9455   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9461:9641   */\n    tag_179:\n        /* \"#utility.yul\":9601:9633   */\n      0x5573657220646f65736e2774206861766520656e6f75676820746f6b656e0000\n        /* \"#utility.yul\":9597:9598   */\n      0x00\n        /* \"#utility.yul\":9589:9595   */\n      dup3\n        /* \"#utility.yul\":9585:9599   */\n      add\n        /* \"#utility.yul\":9578:9634   */\n      mstore\n        /* \"#utility.yul\":9461:9641   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9647:9769   */\n    tag_126:\n        /* \"#utility.yul\":9720:9744   */\n      tag_238\n        /* \"#utility.yul\":9738:9743   */\n      dup2\n        /* \"#utility.yul\":9720:9744   */\n      tag_158\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":9713:9718   */\n      dup2\n        /* \"#utility.yul\":9710:9745   */\n      eq\n        /* \"#utility.yul\":9700:9763   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":9759:9760   */\n      0x00\n        /* \"#utility.yul\":9756:9757   */\n      dup1\n        /* \"#utility.yul\":9749:9761   */\n      revert\n        /* \"#utility.yul\":9700:9763   */\n    tag_239:\n        /* \"#utility.yul\":9647:9769   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9775:9891   */\n    tag_130:\n        /* \"#utility.yul\":9845:9866   */\n      tag_241\n        /* \"#utility.yul\":9860:9865   */\n      dup2\n        /* \"#utility.yul\":9845:9866   */\n      tag_224\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":9838:9843   */\n      dup2\n        /* \"#utility.yul\":9835:9867   */\n      eq\n        /* \"#utility.yul\":9825:9885   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":9881:9882   */\n      0x00\n        /* \"#utility.yul\":9878:9879   */\n      dup1\n        /* \"#utility.yul\":9871:9883   */\n      revert\n        /* \"#utility.yul\":9825:9885   */\n    tag_242:\n        /* \"#utility.yul\":9775:9891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9897:10019   */\n    tag_134:\n        /* \"#utility.yul\":9970:9994   */\n      tag_244\n        /* \"#utility.yul\":9988:9993   */\n      dup2\n        /* \"#utility.yul\":9970:9994   */\n      tag_183\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":9963:9968   */\n      dup2\n        /* \"#utility.yul\":9960:9995   */\n      eq\n        /* \"#utility.yul\":9950:10013   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":10009:10010   */\n      0x00\n        /* \"#utility.yul\":10006:10007   */\n      dup1\n        /* \"#utility.yul\":9999:10011   */\n      revert\n        /* \"#utility.yul\":9950:10013   */\n    tag_245:\n        /* \"#utility.yul\":9897:10019   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203a6564fb8ea66af45f25fc1fc69181c625612063936bc43eb62c3cf173c5602064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_550": {
									"entryPoint": null,
									"id": 550,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_202": {
									"entryPoint": 50,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 58,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610e2c8061010d6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639f0f2524116100665780639f0f252414610123578063cbb2a3481461013f578063ea74d0201461015b578063f2fde38b14610177578063f3c4469f146101935761009e565b806304ba7f29146100a35780635432d7f4146100c1578063715018a6146100df57806373c8c883146100e95780638da5cb5b14610105575b600080fd5b6100ab6101b1565b6040516100b89190610a3b565b60405180910390f35b6100c96101d7565b6040516100d69190610b36565b60405180910390f35b6100e76101dd565b005b61010360048036038101906100fe9190610937565b6101f1565b005b61010d610203565b60405161011a9190610a3b565b60405180910390f35b61013d60048036038101906101389190610937565b61022c565b005b610159600480360381019061015491906108dd565b6105d1565b005b610175600480360381019061017091906108dd565b61061d565b005b610191600480360381019061018c91906108dd565b610669565b005b61019b6106ed565b6040516101a89190610a3b565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b6101e5610713565b6101ef6000610791565b565b6101f9610713565b8060038190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102889190610a3b565b60206040518083038186803b1580156102a057600080fd5b505afa1580156102b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d89190610964565b1015610319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031090610b16565b60405180910390fd5b600061034360646103356003548561085590919063ffffffff16565b61086b90919063ffffffff16565b905080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103a19190610a3b565b60206040518083038186803b1580156103b957600080fd5b505afa1580156103cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f19190610964565b1015610432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042990610ad6565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161049193929190610a56565b602060405180830381600087803b1580156104ab57600080fd5b505af11580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e3919061090a565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610541929190610a8d565b602060405180830381600087803b15801561055b57600080fd5b505af115801561056f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610593919061090a565b507f015fc8ee969fd902d9ebd12a31c54446400a2b512a405366fe14defd6081d22082826040516105c5929190610b51565b60405180910390a15050565b6105d9610713565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610625610713565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610671610713565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d890610ab6565b60405180910390fd5b6106ea81610791565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61071b610881565b73ffffffffffffffffffffffffffffffffffffffff16610739610203565b73ffffffffffffffffffffffffffffffffffffffff161461078f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078690610af6565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081836108639190610bbc565b905092915050565b600081836108799190610b8b565b905092915050565b600033905090565b60008135905061089881610db1565b92915050565b6000815190506108ad81610dc8565b92915050565b6000813590506108c281610ddf565b92915050565b6000815190506108d781610ddf565b92915050565b6000602082840312156108f3576108f2610cbc565b5b600061090184828501610889565b91505092915050565b6000602082840312156109205761091f610cbc565b5b600061092e8482850161089e565b91505092915050565b60006020828403121561094d5761094c610cbc565b5b600061095b848285016108b3565b91505092915050565b60006020828403121561097a57610979610cbc565b5b6000610988848285016108c8565b91505092915050565b61099a81610c16565b82525050565b60006109ad602683610b7a565b91506109b882610cc1565b604082019050919050565b60006109d0602283610b7a565b91506109db82610d10565b604082019050919050565b60006109f3602083610b7a565b91506109fe82610d5f565b602082019050919050565b6000610a16601e83610b7a565b9150610a2182610d88565b602082019050919050565b610a3581610c54565b82525050565b6000602082019050610a506000830184610991565b92915050565b6000606082019050610a6b6000830186610991565b610a786020830185610991565b610a856040830184610a2c565b949350505050565b6000604082019050610aa26000830185610991565b610aaf6020830184610a2c565b9392505050565b60006020820190508181036000830152610acf816109a0565b9050919050565b60006020820190508181036000830152610aef816109c3565b9050919050565b60006020820190508181036000830152610b0f816109e6565b9050919050565b60006020820190508181036000830152610b2f81610a09565b9050919050565b6000602082019050610b4b6000830184610a2c565b92915050565b6000604082019050610b666000830185610a2c565b610b736020830184610a2c565b9392505050565b600082825260208201905092915050565b6000610b9682610c54565b9150610ba183610c54565b925082610bb157610bb0610c8d565b5b828204905092915050565b6000610bc782610c54565b9150610bd283610c54565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0b57610c0a610c5e565b5b828202905092915050565b6000610c2182610c34565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f436f6e747261637420646f65736e2774206861766520656e6f75676820746f6b60008201527f656e000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5573657220646f65736e2774206861766520656e6f75676820746f6b656e0000600082015250565b610dba81610c16565b8114610dc557600080fd5b50565b610dd181610c28565b8114610ddc57600080fd5b50565b610de881610c54565b8114610df357600080fd5b5056fea26469706673582212203a6564fb8ea66af45f25fc1fc69181c625612063936bc43eb62c3cf173c5602064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE2C DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F0F2524 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9F0F2524 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xCBB2A348 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xEA74D020 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xF3C4469F EQ PUSH2 0x193 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x4BA7F29 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x5432D7F4 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x73C8C883 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x105 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x1DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x22C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x5D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x713 JUMP JUMPDEST PUSH2 0x1EF PUSH1 0x0 PUSH2 0x791 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x713 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x964 JUMP JUMPDEST LT ISZERO PUSH2 0x319 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x343 PUSH1 0x64 PUSH2 0x335 PUSH1 0x3 SLOAD DUP6 PUSH2 0x855 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x86B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x964 JUMP JUMPDEST LT ISZERO PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x491 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x90A JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x541 SWAP3 SWAP2 SWAP1 PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x56F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x593 SWAP2 SWAP1 PUSH2 0x90A JUMP JUMPDEST POP PUSH32 0x15FC8EE969FD902D9EBD12A31C54446400A2B512A405366FE14DEFD6081D220 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x5C5 SWAP3 SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x5D9 PUSH2 0x713 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x625 PUSH2 0x713 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x671 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D8 SWAP1 PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6EA DUP2 PUSH2 0x791 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x71B PUSH2 0x881 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x739 PUSH2 0x203 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x786 SWAP1 PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x863 SWAP2 SWAP1 PUSH2 0xBBC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x879 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x898 DUP2 PUSH2 0xDB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8AD DUP2 PUSH2 0xDC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C2 DUP2 PUSH2 0xDDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8D7 DUP2 PUSH2 0xDDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F3 JUMPI PUSH2 0x8F2 PUSH2 0xCBC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x901 DUP5 DUP3 DUP6 ADD PUSH2 0x889 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x920 JUMPI PUSH2 0x91F PUSH2 0xCBC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x92E DUP5 DUP3 DUP6 ADD PUSH2 0x89E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94D JUMPI PUSH2 0x94C PUSH2 0xCBC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x95B DUP5 DUP3 DUP6 ADD PUSH2 0x8B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97A JUMPI PUSH2 0x979 PUSH2 0xCBC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x988 DUP5 DUP3 DUP6 ADD PUSH2 0x8C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x99A DUP2 PUSH2 0xC16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AD PUSH1 0x26 DUP4 PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP PUSH2 0x9B8 DUP3 PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D0 PUSH1 0x22 DUP4 PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP PUSH2 0x9DB DUP3 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F3 PUSH1 0x20 DUP4 PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP PUSH2 0x9FE DUP3 PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA16 PUSH1 0x1E DUP4 PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP PUSH2 0xA21 DUP3 PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA35 DUP2 PUSH2 0xC54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA50 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x991 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA6B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x991 JUMP JUMPDEST PUSH2 0xA78 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x991 JUMP JUMPDEST PUSH2 0xA85 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAA2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x991 JUMP JUMPDEST PUSH2 0xAAF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xACF DUP2 PUSH2 0x9A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAEF DUP2 PUSH2 0x9C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB0F DUP2 PUSH2 0x9E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB2F DUP2 PUSH2 0xA09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB4B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB66 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0xB73 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB96 DUP3 PUSH2 0xC54 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA1 DUP4 PUSH2 0xC54 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xBB1 JUMPI PUSH2 0xBB0 PUSH2 0xC8D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC7 DUP3 PUSH2 0xC54 JUMP JUMPDEST SWAP2 POP PUSH2 0xBD2 DUP4 PUSH2 0xC54 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC0B JUMPI PUSH2 0xC0A PUSH2 0xC5E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC21 DUP3 PUSH2 0xC34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436F6E747261637420646F65736E2774206861766520656E6F75676820746F6B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5573657220646F65736E2774206861766520656E6F75676820746F6B656E0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xDBA DUP2 PUSH2 0xC16 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDD1 DUP2 PUSH2 0xC28 JUMP JUMPDEST DUP2 EQ PUSH2 0xDDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDE8 DUP2 PUSH2 0xC54 JUMP JUMPDEST DUP2 EQ PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH6 0x64FB8EA66AF4 0x5F 0x25 0xFC 0x1F 0xC6 SWAP2 DUP2 0xC6 0x25 PUSH2 0x2063 SWAP4 PUSH12 0xC43EB62C3CF173C560206473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "232:1119:4:-:0;;;442:16;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;232:1119:4;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;232:1119:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SwapTokenAToB_621": {
									"entryPoint": 556,
									"id": 621,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 1811,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_fixedPrice_540": {
									"entryPoint": 471,
									"id": 540,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_202": {
									"entryPoint": 2177,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_tokenA_536": {
									"entryPoint": 1773,
									"id": 536,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_tokenB_538": {
									"entryPoint": 433,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 1937,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_433": {
									"entryPoint": 2155,
									"id": 433,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_418": {
									"entryPoint": 2133,
									"id": 418,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 515,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 477,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAddressTokenA_633": {
									"entryPoint": 1489,
									"id": 633,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setAddressTokenB_645": {
									"entryPoint": 1565,
									"id": 645,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFixedPrice_657": {
									"entryPoint": 497,
									"id": 657,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1641,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_83c9a2dddbb58af270eca1e8866d8233c491c90b62e8d3013a6b5eda146995ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9ec3eb457dbf25fb98a6054a3072f7cc48abe4e290aae2aad74afeaad1b6bef3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2646,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2701,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_83c9a2dddbb58af270eca1e8866d8233c491c90b62e8d3013a6b5eda146995ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9ec3eb457dbf25fb98a6054a3072f7cc48abe4e290aae2aad74afeaad1b6bef3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2897,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3166,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3260,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 3265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_83c9a2dddbb58af270eca1e8866d8233c491c90b62e8d3013a6b5eda146995ed": {
									"entryPoint": 3344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 3423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9ec3eb457dbf25fb98a6054a3072f7cc48abe4e290aae2aad74afeaad1b6bef3": {
									"entryPoint": 3464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10022:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:5",
														"type": ""
													}
												],
												"src": "152:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:5",
														"type": ""
													}
												],
												"src": "295:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:5",
														"type": ""
													}
												],
												"src": "440:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:5"
															},
															"nodeType": "YulIf",
															"src": "665:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:5",
														"type": ""
													}
												],
												"src": "589:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:5"
															},
															"nodeType": "YulIf",
															"src": "1008:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:5",
														"type": ""
													}
												],
												"src": "924:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:5"
															},
															"nodeType": "YulIf",
															"src": "1351:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:5",
														"type": ""
													}
												],
												"src": "1275:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:5"
															},
															"nodeType": "YulIf",
															"src": "1697:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:5",
														"type": ""
													}
												],
												"src": "1610:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2032:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2049:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2072:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2054:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2054:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2042:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2020:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2027:3:5",
														"type": ""
													}
												],
												"src": "1967:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2237:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2247:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2313:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2318:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2254:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2247:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2419:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2330:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2330:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2330:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2432:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2443:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2448:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2439:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2439:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2432:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2225:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2233:3:5",
														"type": ""
													}
												],
												"src": "2091:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2609:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2619:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2685:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2690:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2626:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2626:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2619:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2791:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_83c9a2dddbb58af270eca1e8866d8233c491c90b62e8d3013a6b5eda146995ed",
																	"nodeType": "YulIdentifier",
																	"src": "2702:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2702:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2702:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2804:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2815:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2820:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_83c9a2dddbb58af270eca1e8866d8233c491c90b62e8d3013a6b5eda146995ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2597:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2605:3:5",
														"type": ""
													}
												],
												"src": "2463:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2981:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2991:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3057:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3062:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2998:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2998:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2991:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3163:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "3074:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3074:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3074:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3176:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3187:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3192:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3183:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3183:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3176:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2969:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2977:3:5",
														"type": ""
													}
												],
												"src": "2835:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3353:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3363:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3429:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3434:2:5",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3370:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3370:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3363:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3535:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9ec3eb457dbf25fb98a6054a3072f7cc48abe4e290aae2aad74afeaad1b6bef3",
																	"nodeType": "YulIdentifier",
																	"src": "3446:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3446:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3446:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3548:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3559:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3564:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3555:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3555:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3548:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9ec3eb457dbf25fb98a6054a3072f7cc48abe4e290aae2aad74afeaad1b6bef3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3341:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3349:3:5",
														"type": ""
													}
												],
												"src": "3207:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3644:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3661:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3684:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3666:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3666:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3654:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3654:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3654:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3632:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3639:3:5",
														"type": ""
													}
												],
												"src": "3579:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3801:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3811:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3823:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3834:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3819:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3811:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3891:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3904:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3915:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3900:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3900:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3847:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3847:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3847:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3773:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3785:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3796:4:5",
														"type": ""
													}
												],
												"src": "3703:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4085:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4095:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4107:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4118:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4103:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4095:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4175:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4188:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4199:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4184:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4184:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4131:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4131:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4131:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4256:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4269:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4280:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4265:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4265:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4212:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4212:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4212:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4338:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4351:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4362:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4347:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4294:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4294:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4294:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4041:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4053:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4061:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4069:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4080:4:5",
														"type": ""
													}
												],
												"src": "3931:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4505:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4515:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4527:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4538:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4523:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4523:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4515:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4595:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4608:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4619:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4604:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4604:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4551:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4551:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4551:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4676:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4689:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4700:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4685:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4685:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4632:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4632:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4632:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4469:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4481:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4489:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4500:4:5",
														"type": ""
													}
												],
												"src": "4379:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4888:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4898:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4910:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4921:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4906:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4906:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4898:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4945:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4956:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4941:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4941:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4964:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4970:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4960:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4960:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4934:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4934:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4934:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4990:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5124:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4998:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4998:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4990:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4868:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4883:4:5",
														"type": ""
													}
												],
												"src": "4717:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5313:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5323:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5335:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5346:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5331:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5331:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5323:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5370:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5381:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5366:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5366:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5389:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5395:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5385:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5385:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5359:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5359:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5359:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5415:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5549:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_83c9a2dddbb58af270eca1e8866d8233c491c90b62e8d3013a6b5eda146995ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5423:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5423:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5415:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83c9a2dddbb58af270eca1e8866d8233c491c90b62e8d3013a6b5eda146995ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5293:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5308:4:5",
														"type": ""
													}
												],
												"src": "5142:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5738:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5748:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5760:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5771:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5756:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5756:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5748:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5795:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5806:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5791:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5791:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5814:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5820:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5810:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5810:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5784:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5784:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5784:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5840:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5974:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5848:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5848:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5840:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5718:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5733:4:5",
														"type": ""
													}
												],
												"src": "5567:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6163:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6173:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6185:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6196:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6181:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6181:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6173:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6220:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6231:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6216:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6216:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6239:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6245:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6235:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6235:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6209:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6209:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6209:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6265:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6399:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9ec3eb457dbf25fb98a6054a3072f7cc48abe4e290aae2aad74afeaad1b6bef3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6273:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6273:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6265:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9ec3eb457dbf25fb98a6054a3072f7cc48abe4e290aae2aad74afeaad1b6bef3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6143:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6158:4:5",
														"type": ""
													}
												],
												"src": "5992:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6515:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6525:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6537:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6548:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6533:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6533:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6525:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6605:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6618:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6629:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6614:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6614:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6561:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6561:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6561:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6487:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6499:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6510:4:5",
														"type": ""
													}
												],
												"src": "6417:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6771:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6781:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6793:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6804:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6789:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6781:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6861:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6874:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6885:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6870:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6870:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6817:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6817:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6817:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6942:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6955:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6966:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6951:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6951:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6898:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6898:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6898:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6735:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6747:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6755:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6766:4:5",
														"type": ""
													}
												],
												"src": "6645:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7023:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7033:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7049:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7043:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7043:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7033:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7016:6:5",
														"type": ""
													}
												],
												"src": "6983:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7160:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7177:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7182:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7170:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7170:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7170:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7198:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7217:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7222:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7213:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7213:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7198:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7132:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7137:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7148:11:5",
														"type": ""
													}
												],
												"src": "7064:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7281:143:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7291:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7314:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7296:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7296:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7291:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7325:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7348:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7330:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7330:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7325:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7372:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7374:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7374:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7374:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7369:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7362:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7362:9:5"
															},
															"nodeType": "YulIf",
															"src": "7359:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7404:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7413:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7416:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7409:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7409:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7404:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7270:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7273:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7279:1:5",
														"type": ""
													}
												],
												"src": "7239:185:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7478:300:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7488:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7511:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7493:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7493:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7488:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7522:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7545:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7527:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7527:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7522:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7720:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7722:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7722:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7722:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7632:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7625:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7625:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7618:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7618:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7640:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7647:66:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7715:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7643:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7643:74:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7637:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7637:81:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7614:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7614:105:5"
															},
															"nodeType": "YulIf",
															"src": "7611:131:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7752:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7767:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7770:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7763:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7763:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7752:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7461:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7464:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7470:7:5",
														"type": ""
													}
												],
												"src": "7430:348:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7829:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7839:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7868:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7850:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7850:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7839:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7811:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7821:7:5",
														"type": ""
													}
												],
												"src": "7784:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7928:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7938:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7963:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7956:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7956:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7949:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7949:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7938:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7910:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7920:7:5",
														"type": ""
													}
												],
												"src": "7886:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8027:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8037:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8052:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8059:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8048:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8048:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8037:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8009:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8019:7:5",
														"type": ""
													}
												],
												"src": "7982:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8159:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8169:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8180:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8169:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8141:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8151:7:5",
														"type": ""
													}
												],
												"src": "8114:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8225:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8245:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8235:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8235:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8235:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8339:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8342:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8332:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8332:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8332:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8363:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8366:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8356:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8356:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8356:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8197:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8411:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8428:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8431:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8421:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8421:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8421:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8525:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8528:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8518:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8518:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8518:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8549:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8552:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8542:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8542:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8542:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8383:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8658:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8675:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8678:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8668:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8668:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8668:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "8569:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8781:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8798:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8801:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8791:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8791:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8791:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "8692:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8921:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8943:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8951:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8939:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8939:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8955:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8932:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8932:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8932:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9011:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9019:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9007:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9007:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9024:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9000:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9000:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9000:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8913:6:5",
														"type": ""
													}
												],
												"src": "8815:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9152:115:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9174:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9182:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9170:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9170:14:5"
																	},
																	{
																		"hexValue": "436f6e747261637420646f65736e2774206861766520656e6f75676820746f6b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9186:34:5",
																		"type": "",
																		"value": "Contract doesn't have enough tok"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9163:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9163:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9163:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9242:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9250:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9238:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9238:15:5"
																	},
																	{
																		"hexValue": "656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9255:4:5",
																		"type": "",
																		"value": "en"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9231:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9231:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9231:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_83c9a2dddbb58af270eca1e8866d8233c491c90b62e8d3013a6b5eda146995ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9144:6:5",
														"type": ""
													}
												],
												"src": "9046:221:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9379:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9401:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9409:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9397:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9397:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9413:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9390:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9390:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9390:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9371:6:5",
														"type": ""
													}
												],
												"src": "9273:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9567:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9589:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9597:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9585:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9585:14:5"
																	},
																	{
																		"hexValue": "5573657220646f65736e2774206861766520656e6f75676820746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9601:32:5",
																		"type": "",
																		"value": "User doesn't have enough token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9578:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9578:56:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9578:56:5"
														}
													]
												},
												"name": "store_literal_in_memory_9ec3eb457dbf25fb98a6054a3072f7cc48abe4e290aae2aad74afeaad1b6bef3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9559:6:5",
														"type": ""
													}
												],
												"src": "9461:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9690:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9747:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9756:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9759:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9749:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9749:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9749:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9713:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9738:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "9720:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9720:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9710:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9710:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9703:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9703:43:5"
															},
															"nodeType": "YulIf",
															"src": "9700:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9683:5:5",
														"type": ""
													}
												],
												"src": "9647:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9815:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9869:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9878:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9881:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9871:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9871:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9871:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9838:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9860:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "9845:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9845:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9835:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9835:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9828:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9828:40:5"
															},
															"nodeType": "YulIf",
															"src": "9825:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9808:5:5",
														"type": ""
													}
												],
												"src": "9775:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9940:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9997:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10006:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10009:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9999:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9999:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9999:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9963:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9988:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "9970:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9970:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9960:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9960:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9953:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9953:43:5"
															},
															"nodeType": "YulIf",
															"src": "9950:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9933:5:5",
														"type": ""
													}
												],
												"src": "9897:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_83c9a2dddbb58af270eca1e8866d8233c491c90b62e8d3013a6b5eda146995ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_83c9a2dddbb58af270eca1e8866d8233c491c90b62e8d3013a6b5eda146995ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9ec3eb457dbf25fb98a6054a3072f7cc48abe4e290aae2aad74afeaad1b6bef3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_9ec3eb457dbf25fb98a6054a3072f7cc48abe4e290aae2aad74afeaad1b6bef3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_83c9a2dddbb58af270eca1e8866d8233c491c90b62e8d3013a6b5eda146995ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_83c9a2dddbb58af270eca1e8866d8233c491c90b62e8d3013a6b5eda146995ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9ec3eb457dbf25fb98a6054a3072f7cc48abe4e290aae2aad74afeaad1b6bef3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9ec3eb457dbf25fb98a6054a3072f7cc48abe4e290aae2aad74afeaad1b6bef3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_83c9a2dddbb58af270eca1e8866d8233c491c90b62e8d3013a6b5eda146995ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract doesn't have enough tok\")\n\n        mstore(add(memPtr, 32), \"en\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_9ec3eb457dbf25fb98a6054a3072f7cc48abe4e290aae2aad74afeaad1b6bef3(memPtr) {\n\n        mstore(add(memPtr, 0), \"User doesn't have enough token\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c80639f0f2524116100665780639f0f252414610123578063cbb2a3481461013f578063ea74d0201461015b578063f2fde38b14610177578063f3c4469f146101935761009e565b806304ba7f29146100a35780635432d7f4146100c1578063715018a6146100df57806373c8c883146100e95780638da5cb5b14610105575b600080fd5b6100ab6101b1565b6040516100b89190610a3b565b60405180910390f35b6100c96101d7565b6040516100d69190610b36565b60405180910390f35b6100e76101dd565b005b61010360048036038101906100fe9190610937565b6101f1565b005b61010d610203565b60405161011a9190610a3b565b60405180910390f35b61013d60048036038101906101389190610937565b61022c565b005b610159600480360381019061015491906108dd565b6105d1565b005b610175600480360381019061017091906108dd565b61061d565b005b610191600480360381019061018c91906108dd565b610669565b005b61019b6106ed565b6040516101a89190610a3b565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b6101e5610713565b6101ef6000610791565b565b6101f9610713565b8060038190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102889190610a3b565b60206040518083038186803b1580156102a057600080fd5b505afa1580156102b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d89190610964565b1015610319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031090610b16565b60405180910390fd5b600061034360646103356003548561085590919063ffffffff16565b61086b90919063ffffffff16565b905080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103a19190610a3b565b60206040518083038186803b1580156103b957600080fd5b505afa1580156103cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f19190610964565b1015610432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042990610ad6565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161049193929190610a56565b602060405180830381600087803b1580156104ab57600080fd5b505af11580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e3919061090a565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610541929190610a8d565b602060405180830381600087803b15801561055b57600080fd5b505af115801561056f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610593919061090a565b507f015fc8ee969fd902d9ebd12a31c54446400a2b512a405366fe14defd6081d22082826040516105c5929190610b51565b60405180910390a15050565b6105d9610713565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610625610713565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610671610713565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d890610ab6565b60405180910390fd5b6106ea81610791565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61071b610881565b73ffffffffffffffffffffffffffffffffffffffff16610739610203565b73ffffffffffffffffffffffffffffffffffffffff161461078f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078690610af6565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081836108639190610bbc565b905092915050565b600081836108799190610b8b565b905092915050565b600033905090565b60008135905061089881610db1565b92915050565b6000815190506108ad81610dc8565b92915050565b6000813590506108c281610ddf565b92915050565b6000815190506108d781610ddf565b92915050565b6000602082840312156108f3576108f2610cbc565b5b600061090184828501610889565b91505092915050565b6000602082840312156109205761091f610cbc565b5b600061092e8482850161089e565b91505092915050565b60006020828403121561094d5761094c610cbc565b5b600061095b848285016108b3565b91505092915050565b60006020828403121561097a57610979610cbc565b5b6000610988848285016108c8565b91505092915050565b61099a81610c16565b82525050565b60006109ad602683610b7a565b91506109b882610cc1565b604082019050919050565b60006109d0602283610b7a565b91506109db82610d10565b604082019050919050565b60006109f3602083610b7a565b91506109fe82610d5f565b602082019050919050565b6000610a16601e83610b7a565b9150610a2182610d88565b602082019050919050565b610a3581610c54565b82525050565b6000602082019050610a506000830184610991565b92915050565b6000606082019050610a6b6000830186610991565b610a786020830185610991565b610a856040830184610a2c565b949350505050565b6000604082019050610aa26000830185610991565b610aaf6020830184610a2c565b9392505050565b60006020820190508181036000830152610acf816109a0565b9050919050565b60006020820190508181036000830152610aef816109c3565b9050919050565b60006020820190508181036000830152610b0f816109e6565b9050919050565b60006020820190508181036000830152610b2f81610a09565b9050919050565b6000602082019050610b4b6000830184610a2c565b92915050565b6000604082019050610b666000830185610a2c565b610b736020830184610a2c565b9392505050565b600082825260208201905092915050565b6000610b9682610c54565b9150610ba183610c54565b925082610bb157610bb0610c8d565b5b828204905092915050565b6000610bc782610c54565b9150610bd283610c54565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0b57610c0a610c5e565b5b828202905092915050565b6000610c2182610c34565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f436f6e747261637420646f65736e2774206861766520656e6f75676820746f6b60008201527f656e000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5573657220646f65736e2774206861766520656e6f75676820746f6b656e0000600082015250565b610dba81610c16565b8114610dc557600080fd5b50565b610dd181610c28565b8114610ddc57600080fd5b50565b610de881610c54565b8114610df357600080fd5b5056fea26469706673582212203a6564fb8ea66af45f25fc1fc69181c625612063936bc43eb62c3cf173c5602064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9F0F2524 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9F0F2524 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xCBB2A348 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0xEA74D020 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xF3C4469F EQ PUSH2 0x193 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x4BA7F29 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x5432D7F4 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x73C8C883 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x105 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH2 0x1DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x937 JUMP JUMPDEST PUSH2 0x22C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x5D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x713 JUMP JUMPDEST PUSH2 0x1EF PUSH1 0x0 PUSH2 0x791 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x713 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x964 JUMP JUMPDEST LT ISZERO PUSH2 0x319 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x343 PUSH1 0x64 PUSH2 0x335 PUSH1 0x3 SLOAD DUP6 PUSH2 0x855 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x86B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x964 JUMP JUMPDEST LT ISZERO PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x429 SWAP1 PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x491 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x90A JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x541 SWAP3 SWAP2 SWAP1 PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x56F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x593 SWAP2 SWAP1 PUSH2 0x90A JUMP JUMPDEST POP PUSH32 0x15FC8EE969FD902D9EBD12A31C54446400A2B512A405366FE14DEFD6081D220 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x5C5 SWAP3 SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x5D9 PUSH2 0x713 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x625 PUSH2 0x713 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x671 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D8 SWAP1 PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6EA DUP2 PUSH2 0x791 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x71B PUSH2 0x881 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x739 PUSH2 0x203 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x786 SWAP1 PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x863 SWAP2 SWAP1 PUSH2 0xBBC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x879 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x898 DUP2 PUSH2 0xDB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8AD DUP2 PUSH2 0xDC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C2 DUP2 PUSH2 0xDDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8D7 DUP2 PUSH2 0xDDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F3 JUMPI PUSH2 0x8F2 PUSH2 0xCBC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x901 DUP5 DUP3 DUP6 ADD PUSH2 0x889 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x920 JUMPI PUSH2 0x91F PUSH2 0xCBC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x92E DUP5 DUP3 DUP6 ADD PUSH2 0x89E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94D JUMPI PUSH2 0x94C PUSH2 0xCBC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x95B DUP5 DUP3 DUP6 ADD PUSH2 0x8B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97A JUMPI PUSH2 0x979 PUSH2 0xCBC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x988 DUP5 DUP3 DUP6 ADD PUSH2 0x8C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x99A DUP2 PUSH2 0xC16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AD PUSH1 0x26 DUP4 PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP PUSH2 0x9B8 DUP3 PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D0 PUSH1 0x22 DUP4 PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP PUSH2 0x9DB DUP3 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F3 PUSH1 0x20 DUP4 PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP PUSH2 0x9FE DUP3 PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA16 PUSH1 0x1E DUP4 PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP PUSH2 0xA21 DUP3 PUSH2 0xD88 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA35 DUP2 PUSH2 0xC54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA50 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x991 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA6B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x991 JUMP JUMPDEST PUSH2 0xA78 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x991 JUMP JUMPDEST PUSH2 0xA85 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAA2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x991 JUMP JUMPDEST PUSH2 0xAAF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xACF DUP2 PUSH2 0x9A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAEF DUP2 PUSH2 0x9C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB0F DUP2 PUSH2 0x9E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB2F DUP2 PUSH2 0xA09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB4B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB66 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xA2C JUMP JUMPDEST PUSH2 0xB73 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA2C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB96 DUP3 PUSH2 0xC54 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA1 DUP4 PUSH2 0xC54 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xBB1 JUMPI PUSH2 0xBB0 PUSH2 0xC8D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC7 DUP3 PUSH2 0xC54 JUMP JUMPDEST SWAP2 POP PUSH2 0xBD2 DUP4 PUSH2 0xC54 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC0B JUMPI PUSH2 0xC0A PUSH2 0xC5E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC21 DUP3 PUSH2 0xC34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436F6E747261637420646F65736E2774206861766520656E6F75676820746F6B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5573657220646F65736E2774206861766520656E6F75676820746F6B656E0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xDBA DUP2 PUSH2 0xC16 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDD1 DUP2 PUSH2 0xC28 JUMP JUMPDEST DUP2 EQ PUSH2 0xDDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xDE8 DUP2 PUSH2 0xC54 JUMP JUMPDEST DUP2 EQ PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH6 0x64FB8EA66AF4 0x5F 0x25 0xFC 0x1F 0xC6 SWAP2 DUP2 0xC6 0x25 PUSH2 0x2063 SWAP4 PUSH12 0xC43EB62C3CF173C560206473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "232:1119:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;331:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;359:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1246:103:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;464:576:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1046:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;303:22:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;331;;;;;;;;;;;;;:::o;359:26::-;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1246:103:4:-;1094:13:0;:11;:13::i;:::-;1332:10:4::1;1318:11;:24;;;;1246:103:::0;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;464:576:4:-;586:8;552:7;;;;;;;;;;;545:25;;;571:10;545:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;524:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;661:17;681:34;711:3;681:25;694:11;;681:8;:12;;:25;;;;:::i;:::-;:29;;:34;;;;:::i;:::-;661:54;;790:9;753:7;;;;;;;;;;;746:25;;;780:4;746:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;725:134;;;;;;;;;;;;:::i;:::-;;;;;;;;;877:7;;;;;;;;;;;870:28;;;899:10;919:4;926:8;870:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;953:7;;;;;;;;;;;946:24;;;971:10;983:9;946:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1008:25;1013:8;1023:9;1008:25;;;;;;;:::i;:::-;;;;;;;;514:526;464:576;:::o;1046:94::-;1094:13:0;:11;:13::i;:::-;1127:6:4::1;1117:7;;:16;;;;;;;;;;;;;;;;;;1046:94:::0;:::o;1146:::-;1094:13:0;:11;:13::i;:::-;1227:6:4::1;1217:7;;:16;;;;;;;;;;;;;;;;;;1146:94:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;303:22:4:-;;;;;;;;;;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;3465:96:3:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;640::2:-;693:7;719:10;712:17;;640:96;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:118::-;2054:24;2072:5;2054:24;:::i;:::-;2049:3;2042:37;1967:118;;:::o;2091:366::-;2233:3;2254:67;2318:2;2313:3;2254:67;:::i;:::-;2247:74;;2330:93;2419:3;2330:93;:::i;:::-;2448:2;2443:3;2439:12;2432:19;;2091:366;;;:::o;2463:::-;2605:3;2626:67;2690:2;2685:3;2626:67;:::i;:::-;2619:74;;2702:93;2791:3;2702:93;:::i;:::-;2820:2;2815:3;2811:12;2804:19;;2463:366;;;:::o;2835:::-;2977:3;2998:67;3062:2;3057:3;2998:67;:::i;:::-;2991:74;;3074:93;3163:3;3074:93;:::i;:::-;3192:2;3187:3;3183:12;3176:19;;2835:366;;;:::o;3207:::-;3349:3;3370:67;3434:2;3429:3;3370:67;:::i;:::-;3363:74;;3446:93;3535:3;3446:93;:::i;:::-;3564:2;3559:3;3555:12;3548:19;;3207:366;;;:::o;3579:118::-;3666:24;3684:5;3666:24;:::i;:::-;3661:3;3654:37;3579:118;;:::o;3703:222::-;3796:4;3834:2;3823:9;3819:18;3811:26;;3847:71;3915:1;3904:9;3900:17;3891:6;3847:71;:::i;:::-;3703:222;;;;:::o;3931:442::-;4080:4;4118:2;4107:9;4103:18;4095:26;;4131:71;4199:1;4188:9;4184:17;4175:6;4131:71;:::i;:::-;4212:72;4280:2;4269:9;4265:18;4256:6;4212:72;:::i;:::-;4294;4362:2;4351:9;4347:18;4338:6;4294:72;:::i;:::-;3931:442;;;;;;:::o;4379:332::-;4500:4;4538:2;4527:9;4523:18;4515:26;;4551:71;4619:1;4608:9;4604:17;4595:6;4551:71;:::i;:::-;4632:72;4700:2;4689:9;4685:18;4676:6;4632:72;:::i;:::-;4379:332;;;;;:::o;4717:419::-;4883:4;4921:2;4910:9;4906:18;4898:26;;4970:9;4964:4;4960:20;4956:1;4945:9;4941:17;4934:47;4998:131;5124:4;4998:131;:::i;:::-;4990:139;;4717:419;;;:::o;5142:::-;5308:4;5346:2;5335:9;5331:18;5323:26;;5395:9;5389:4;5385:20;5381:1;5370:9;5366:17;5359:47;5423:131;5549:4;5423:131;:::i;:::-;5415:139;;5142:419;;;:::o;5567:::-;5733:4;5771:2;5760:9;5756:18;5748:26;;5820:9;5814:4;5810:20;5806:1;5795:9;5791:17;5784:47;5848:131;5974:4;5848:131;:::i;:::-;5840:139;;5567:419;;;:::o;5992:::-;6158:4;6196:2;6185:9;6181:18;6173:26;;6245:9;6239:4;6235:20;6231:1;6220:9;6216:17;6209:47;6273:131;6399:4;6273:131;:::i;:::-;6265:139;;5992:419;;;:::o;6417:222::-;6510:4;6548:2;6537:9;6533:18;6525:26;;6561:71;6629:1;6618:9;6614:17;6605:6;6561:71;:::i;:::-;6417:222;;;;:::o;6645:332::-;6766:4;6804:2;6793:9;6789:18;6781:26;;6817:71;6885:1;6874:9;6870:17;6861:6;6817:71;:::i;:::-;6898:72;6966:2;6955:9;6951:18;6942:6;6898:72;:::i;:::-;6645:332;;;;;:::o;7064:169::-;7148:11;7182:6;7177:3;7170:19;7222:4;7217:3;7213:14;7198:29;;7064:169;;;;:::o;7239:185::-;7279:1;7296:20;7314:1;7296:20;:::i;:::-;7291:25;;7330:20;7348:1;7330:20;:::i;:::-;7325:25;;7369:1;7359:35;;7374:18;;:::i;:::-;7359:35;7416:1;7413;7409:9;7404:14;;7239:185;;;;:::o;7430:348::-;7470:7;7493:20;7511:1;7493:20;:::i;:::-;7488:25;;7527:20;7545:1;7527:20;:::i;:::-;7522:25;;7715:1;7647:66;7643:74;7640:1;7637:81;7632:1;7625:9;7618:17;7614:105;7611:131;;;7722:18;;:::i;:::-;7611:131;7770:1;7767;7763:9;7752:20;;7430:348;;;;:::o;7784:96::-;7821:7;7850:24;7868:5;7850:24;:::i;:::-;7839:35;;7784:96;;;:::o;7886:90::-;7920:7;7963:5;7956:13;7949:21;7938:32;;7886:90;;;:::o;7982:126::-;8019:7;8059:42;8052:5;8048:54;8037:65;;7982:126;;;:::o;8114:77::-;8151:7;8180:5;8169:16;;8114:77;;;:::o;8197:180::-;8245:77;8242:1;8235:88;8342:4;8339:1;8332:15;8366:4;8363:1;8356:15;8383:180;8431:77;8428:1;8421:88;8528:4;8525:1;8518:15;8552:4;8549:1;8542:15;8692:117;8801:1;8798;8791:12;8815:225;8955:34;8951:1;8943:6;8939:14;8932:58;9024:8;9019:2;9011:6;9007:15;9000:33;8815:225;:::o;9046:221::-;9186:34;9182:1;9174:6;9170:14;9163:58;9255:4;9250:2;9242:6;9238:15;9231:29;9046:221;:::o;9273:182::-;9413:34;9409:1;9401:6;9397:14;9390:58;9273:182;:::o;9461:180::-;9601:32;9597:1;9589:6;9585:14;9578:56;9461:180;:::o;9647:122::-;9720:24;9738:5;9720:24;:::i;:::-;9713:5;9710:35;9700:63;;9759:1;9756;9749:12;9700:63;9647:122;:::o;9775:116::-;9845:21;9860:5;9845:21;:::i;:::-;9838:5;9835:32;9825:60;;9881:1;9878;9871:12;9825:60;9775:116;:::o;9897:122::-;9970:24;9988:5;9970:24;:::i;:::-;9963:5;9960:35;9950:63;;10009:1;10006;9999:12;9950:63;9897:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "725600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"SwapTokenAToB(uint256)": "infinite",
								"_fixedPrice()": "2452",
								"_tokenA()": "2602",
								"_tokenB()": "2515",
								"owner()": "2611",
								"renounceOwnership()": "30443",
								"setAddressTokenA(address)": "27008",
								"setAddressTokenB(address)": "27030",
								"setFixedPrice(uint256)": "24851",
								"transferOwnership(address)": "30813"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 232,
									"end": 1351,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 232,
									"end": 1351,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 232,
									"end": 1351,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 442,
									"end": 458,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 442,
									"end": 458,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 442,
									"end": 458,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 442,
									"end": 458,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 458,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 442,
									"end": 458,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 458,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 442,
									"end": 458,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 442,
									"end": 458,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 458,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 442,
									"end": 458,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 232,
									"end": 1351,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 232,
									"end": 1351,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 232,
									"end": 1351,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 232,
									"end": 1351,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 232,
									"end": 1351,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 1351,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 232,
									"end": 1351,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 1351,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 1351,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 232,
									"end": 1351,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 1351,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a6564fb8ea66af45f25fc1fc69181c625612063936bc43eb62c3cf173c5602064736f6c63430008070033",
									".code": [
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "9F0F2524"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "9F0F2524"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "CBB2A348"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "EA74D020"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "F3C4469F"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "4BA7F29"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "5432D7F4"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "73C8C883"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 1351,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 359,
											"end": 385,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 359,
											"end": 385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 359,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 359,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 359,
											"end": 385,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 359,
											"end": 385,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 359,
											"end": 385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 359,
											"end": 385,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 385,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 359,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 385,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 359,
											"end": 385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 359,
											"end": 385,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 359,
											"end": 385,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 359,
											"end": 385,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 385,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 359,
											"end": 385,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 385,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 359,
											"end": 385,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 359,
											"end": 385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 359,
											"end": 385,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 325,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 331,
											"end": 353,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 385,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 359,
											"end": 385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 359,
											"end": 385,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 359,
											"end": 385,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 359,
											"end": 385,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 359,
											"end": 385,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1342,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1329,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1318,
											"end": 1342,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1342,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1342,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1342,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1349,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 586,
											"end": 594,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 552,
											"end": 559,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 552,
											"end": 559,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 552,
											"end": 559,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 552,
											"end": 559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 552,
											"end": 559,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 552,
											"end": 559,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 552,
											"end": 559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 552,
											"end": 559,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 552,
											"end": 559,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 552,
											"end": 559,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 545,
											"end": 570,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 545,
											"end": 570,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 545,
											"end": 570,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 571,
											"end": 581,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 545,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 545,
											"end": 582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 545,
											"end": 594,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 545,
											"end": 594,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 524,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 524,
											"end": 650,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 524,
											"end": 650,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 524,
											"end": 650,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 524,
											"end": 650,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 524,
											"end": 650,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 524,
											"end": 650,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 524,
											"end": 650,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 524,
											"end": 650,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 524,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 524,
											"end": 650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 524,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 524,
											"end": 650,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 524,
											"end": 650,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 524,
											"end": 650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 524,
											"end": 650,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 524,
											"end": 650,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 524,
											"end": 650,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 524,
											"end": 650,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 524,
											"end": 650,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 524,
											"end": 650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 524,
											"end": 650,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 524,
											"end": 650,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 524,
											"end": 650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 661,
											"end": 678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 711,
											"end": 714,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 681,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 694,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 694,
											"end": 705,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 681,
											"end": 689,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 681,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 681,
											"end": 693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 681,
											"end": 706,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 681,
											"end": 706,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 681,
											"end": 706,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 681,
											"end": 706,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 681,
											"end": 706,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 681,
											"end": 706,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 681,
											"end": 706,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 681,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 681,
											"end": 715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 681,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 681,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 681,
											"end": 715,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 681,
											"end": 715,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 681,
											"end": 715,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 681,
											"end": 715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 661,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 661,
											"end": 715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 790,
											"end": 799,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 753,
											"end": 760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 753,
											"end": 760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 753,
											"end": 760,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 753,
											"end": 760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 753,
											"end": 760,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 753,
											"end": 760,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 753,
											"end": 760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 753,
											"end": 760,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 753,
											"end": 760,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 753,
											"end": 760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 746,
											"end": 771,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 746,
											"end": 771,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 746,
											"end": 771,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 780,
											"end": 784,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 746,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 746,
											"end": 786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 746,
											"end": 799,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 746,
											"end": 799,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 725,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 725,
											"end": 859,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 725,
											"end": 859,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 859,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 725,
											"end": 859,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 725,
											"end": 859,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 725,
											"end": 859,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 725,
											"end": 859,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 725,
											"end": 859,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 725,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 725,
											"end": 859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 725,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 725,
											"end": 859,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 725,
											"end": 859,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 725,
											"end": 859,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 725,
											"end": 859,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 859,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 725,
											"end": 859,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 725,
											"end": 859,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 725,
											"end": 859,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 725,
											"end": 859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 725,
											"end": 859,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 725,
											"end": 859,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 725,
											"end": 859,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 877,
											"end": 884,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 877,
											"end": 884,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 877,
											"end": 884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 877,
											"end": 884,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 877,
											"end": 884,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 877,
											"end": 884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 877,
											"end": 884,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 877,
											"end": 884,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 877,
											"end": 884,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 870,
											"end": 898,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 870,
											"end": 898,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 870,
											"end": 898,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 899,
											"end": 909,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 919,
											"end": 923,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 926,
											"end": 934,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 870,
											"end": 935,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 870,
											"end": 935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 953,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 953,
											"end": 960,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 953,
											"end": 960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 953,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 953,
											"end": 960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 953,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 946,
											"end": 970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 946,
											"end": 970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 946,
											"end": 970,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 971,
											"end": 981,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 983,
											"end": 992,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 946,
											"end": 993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 946,
											"end": 993,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "PUSH",
											"source": 4,
											"value": "15FC8EE969FD902D9EBD12A31C54446400A2B512A405366FE14DEFD6081D220"
										},
										{
											"begin": 1013,
											"end": 1021,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1032,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1033,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 514,
											"end": 1040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 464,
											"end": 1040,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1133,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1117,
											"end": 1133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1140,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1240,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 303,
											"end": 325,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2072,
											"end": 2077,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2079,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2318,
											"end": 2320,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2313,
											"end": 2316,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2254,
											"end": 2321,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2254,
											"end": 2321,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2254,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2321,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2321,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2419,
											"end": 2422,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2330,
											"end": 2423,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2330,
											"end": 2423,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2330,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2443,
											"end": 2446,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2451,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2451,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2451,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2457,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2463,
											"end": 2829,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2463,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2605,
											"end": 2608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2690,
											"end": 2692,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2685,
											"end": 2688,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2626,
											"end": 2693,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2626,
											"end": 2693,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2626,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2619,
											"end": 2693,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2619,
											"end": 2693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2791,
											"end": 2794,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2702,
											"end": 2795,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2702,
											"end": 2795,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2702,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2822,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2818,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 2823,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2823,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2823,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2463,
											"end": 2829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2463,
											"end": 2829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2463,
											"end": 2829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2463,
											"end": 2829,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2835,
											"end": 3201,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2835,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 2980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3062,
											"end": 3064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3060,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2998,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2998,
											"end": 3065,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2998,
											"end": 3065,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2998,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3163,
											"end": 3166,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3074,
											"end": 3167,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3074,
											"end": 3167,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3074,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3192,
											"end": 3194,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3190,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3195,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3176,
											"end": 3195,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3176,
											"end": 3195,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 3201,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 3201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 3201,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 3201,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3207,
											"end": 3573,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3207,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3349,
											"end": 3352,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3434,
											"end": 3436,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 3429,
											"end": 3432,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3370,
											"end": 3437,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3370,
											"end": 3437,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3370,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3363,
											"end": 3437,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3363,
											"end": 3437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3535,
											"end": 3538,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3446,
											"end": 3539,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3446,
											"end": 3539,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3446,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3566,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3559,
											"end": 3562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3567,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3207,
											"end": 3573,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3207,
											"end": 3573,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3207,
											"end": 3573,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3207,
											"end": 3573,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3579,
											"end": 3697,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3579,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3666,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3684,
											"end": 3689,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3666,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3666,
											"end": 3690,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3666,
											"end": 3690,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3666,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3661,
											"end": 3664,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3691,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3697,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3697,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3697,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3703,
											"end": 3925,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3703,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3796,
											"end": 3800,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3834,
											"end": 3836,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3832,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3811,
											"end": 3837,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3811,
											"end": 3837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3915,
											"end": 3916,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3913,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3847,
											"end": 3918,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3847,
											"end": 3918,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3847,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3925,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3925,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3931,
											"end": 4373,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3931,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4084,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4120,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4107,
											"end": 4116,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4095,
											"end": 4121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4095,
											"end": 4121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4131,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4199,
											"end": 4200,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4184,
											"end": 4201,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4181,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4131,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4131,
											"end": 4202,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4131,
											"end": 4202,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4131,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4212,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 4280,
											"end": 4282,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4269,
											"end": 4278,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4283,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4256,
											"end": 4262,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4212,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4212,
											"end": 4284,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4212,
											"end": 4284,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 4212,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4362,
											"end": 4364,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4360,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4338,
											"end": 4344,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 4294,
											"end": 4366,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4366,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4294,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3931,
											"end": 4373,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3931,
											"end": 4373,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3931,
											"end": 4373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3931,
											"end": 4373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3931,
											"end": 4373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3931,
											"end": 4373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3931,
											"end": 4373,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4379,
											"end": 4711,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4379,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4500,
											"end": 4504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4540,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4527,
											"end": 4536,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4541,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4619,
											"end": 4620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4608,
											"end": 4617,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 4621,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4551,
											"end": 4622,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4551,
											"end": 4622,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4551,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4700,
											"end": 4702,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4689,
											"end": 4698,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4703,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4676,
											"end": 4682,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 4632,
											"end": 4704,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4632,
											"end": 4704,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4632,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4711,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4711,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4711,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4711,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4711,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4711,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4717,
											"end": 5136,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4717,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4883,
											"end": 4887,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4921,
											"end": 4923,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4910,
											"end": 4919,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4924,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4924,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4970,
											"end": 4979,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4964,
											"end": 4968,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 4980,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4956,
											"end": 4957,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4945,
											"end": 4954,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4941,
											"end": 4958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4934,
											"end": 4981,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5124,
											"end": 5128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4998,
											"end": 5129,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5129,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 4998,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4990,
											"end": 5129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4990,
											"end": 5129,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 5136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 5136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 5136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 5136,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5142,
											"end": 5561,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 5142,
											"end": 5561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5348,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5335,
											"end": 5344,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5395,
											"end": 5404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5389,
											"end": 5393,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5385,
											"end": 5405,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5381,
											"end": 5382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5379,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5549,
											"end": 5553,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5423,
											"end": 5554,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5554,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5423,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5554,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5554,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5561,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5142,
											"end": 5561,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5567,
											"end": 5986,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 5567,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5733,
											"end": 5737,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5771,
											"end": 5773,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5760,
											"end": 5769,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5820,
											"end": 5829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5814,
											"end": 5818,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5830,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5806,
											"end": 5807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5804,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5791,
											"end": 5808,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5831,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5848,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 5974,
											"end": 5978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5848,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5848,
											"end": 5979,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5848,
											"end": 5979,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 5848,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5840,
											"end": 5979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5840,
											"end": 5979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5986,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5992,
											"end": 6411,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 5992,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6158,
											"end": 6162,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6198,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6185,
											"end": 6194,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6181,
											"end": 6199,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6173,
											"end": 6199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6245,
											"end": 6254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6239,
											"end": 6243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6235,
											"end": 6255,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6231,
											"end": 6232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6220,
											"end": 6229,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6233,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6209,
											"end": 6256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6273,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 6399,
											"end": 6403,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6273,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6273,
											"end": 6404,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6273,
											"end": 6404,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 6273,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6265,
											"end": 6404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6265,
											"end": 6404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5992,
											"end": 6411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5992,
											"end": 6411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5992,
											"end": 6411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5992,
											"end": 6411,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6417,
											"end": 6639,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 6417,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6510,
											"end": 6514,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6550,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6537,
											"end": 6546,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6525,
											"end": 6551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6525,
											"end": 6551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6561,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 6629,
											"end": 6630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6627,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6614,
											"end": 6631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6605,
											"end": 6611,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6561,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 6561,
											"end": 6632,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6561,
											"end": 6632,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 6561,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6417,
											"end": 6639,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6417,
											"end": 6639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6417,
											"end": 6639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6417,
											"end": 6639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6417,
											"end": 6639,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6645,
											"end": 6977,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 6645,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6804,
											"end": 6806,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6793,
											"end": 6802,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6789,
											"end": 6807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 6807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 6807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6817,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 6885,
											"end": 6886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6874,
											"end": 6883,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6861,
											"end": 6867,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6817,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 6817,
											"end": 6888,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6817,
											"end": 6888,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 6817,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6898,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 6966,
											"end": 6968,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6955,
											"end": 6964,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6942,
											"end": 6948,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6898,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 6898,
											"end": 6970,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6898,
											"end": 6970,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 6898,
											"end": 6970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6977,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6977,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6977,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7064,
											"end": 7233,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 7064,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7148,
											"end": 7159,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7182,
											"end": 7188,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7177,
											"end": 7180,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7170,
											"end": 7189,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7222,
											"end": 7226,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7217,
											"end": 7220,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7227,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7198,
											"end": 7227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7233,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7233,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7233,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7239,
											"end": 7424,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 7239,
											"end": 7424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7279,
											"end": 7280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7296,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 7314,
											"end": 7315,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7296,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 7296,
											"end": 7316,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7296,
											"end": 7316,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 7296,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7291,
											"end": 7316,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7291,
											"end": 7316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7348,
											"end": 7349,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7330,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 7330,
											"end": 7350,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7330,
											"end": 7350,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7330,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7325,
											"end": 7350,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7325,
											"end": 7350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7369,
											"end": 7370,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7359,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 7359,
											"end": 7394,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 7374,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 7374,
											"end": 7392,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7374,
											"end": 7392,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 7374,
											"end": 7392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7359,
											"end": 7394,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 7359,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7416,
											"end": 7417,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7413,
											"end": 7414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7409,
											"end": 7418,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7404,
											"end": 7418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7404,
											"end": 7418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7424,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7424,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7424,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7430,
											"end": 7778,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 7430,
											"end": 7778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7470,
											"end": 7477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7493,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 7511,
											"end": 7512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7493,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 7493,
											"end": 7513,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7493,
											"end": 7513,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 7493,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7488,
											"end": 7513,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7488,
											"end": 7513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7527,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 7545,
											"end": 7546,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7527,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 7527,
											"end": 7547,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7527,
											"end": 7547,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 7527,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7522,
											"end": 7547,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7522,
											"end": 7547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7647,
											"end": 7713,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7643,
											"end": 7717,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7637,
											"end": 7718,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7632,
											"end": 7633,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7625,
											"end": 7634,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7618,
											"end": 7635,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7614,
											"end": 7719,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7611,
											"end": 7742,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7611,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 7611,
											"end": 7742,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7722,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 7722,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 7722,
											"end": 7740,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7722,
											"end": 7740,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 7722,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7611,
											"end": 7742,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 7611,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7770,
											"end": 7771,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7767,
											"end": 7768,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7763,
											"end": 7772,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7752,
											"end": 7772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7752,
											"end": 7772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7430,
											"end": 7778,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7430,
											"end": 7778,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7430,
											"end": 7778,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7430,
											"end": 7778,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7430,
											"end": 7778,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7784,
											"end": 7880,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 7784,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7821,
											"end": 7828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7850,
											"end": 7874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 7868,
											"end": 7873,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7850,
											"end": 7874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 7850,
											"end": 7874,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7850,
											"end": 7874,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 7850,
											"end": 7874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7784,
											"end": 7880,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7784,
											"end": 7880,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7784,
											"end": 7880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7784,
											"end": 7880,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7886,
											"end": 7976,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 7886,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7920,
											"end": 7927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7963,
											"end": 7968,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7956,
											"end": 7969,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7949,
											"end": 7970,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7938,
											"end": 7970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7938,
											"end": 7970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7976,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 7976,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7982,
											"end": 8108,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 7982,
											"end": 8108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8019,
											"end": 8026,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8101,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8052,
											"end": 8057,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8048,
											"end": 8102,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8037,
											"end": 8102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8037,
											"end": 8102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7982,
											"end": 8108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7982,
											"end": 8108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7982,
											"end": 8108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7982,
											"end": 8108,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8114,
											"end": 8191,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 8114,
											"end": 8191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8151,
											"end": 8158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8180,
											"end": 8185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8169,
											"end": 8185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8169,
											"end": 8185,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8191,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8191,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8197,
											"end": 8377,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 8197,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8245,
											"end": 8322,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8235,
											"end": 8323,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8342,
											"end": 8346,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8339,
											"end": 8340,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8332,
											"end": 8347,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8366,
											"end": 8370,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8363,
											"end": 8364,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8371,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8563,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 8383,
											"end": 8563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8508,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8428,
											"end": 8429,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8421,
											"end": 8509,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8528,
											"end": 8532,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 8525,
											"end": 8526,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8518,
											"end": 8533,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8556,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8549,
											"end": 8550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8542,
											"end": 8557,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8692,
											"end": 8809,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 8692,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8801,
											"end": 8802,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8798,
											"end": 8799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8791,
											"end": 8803,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8815,
											"end": 9040,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 8815,
											"end": 9040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8955,
											"end": 8989,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8951,
											"end": 8952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8949,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8939,
											"end": 8953,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8932,
											"end": 8990,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9024,
											"end": 9032,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9019,
											"end": 9021,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9011,
											"end": 9017,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9007,
											"end": 9022,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9000,
											"end": 9033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8815,
											"end": 9040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8815,
											"end": 9040,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9046,
											"end": 9267,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 9046,
											"end": 9267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9186,
											"end": 9220,
											"name": "PUSH",
											"source": 5,
											"value": "436F6E747261637420646F65736E2774206861766520656E6F75676820746F6B"
										},
										{
											"begin": 9182,
											"end": 9183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9180,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9170,
											"end": 9184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9163,
											"end": 9221,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9255,
											"end": 9259,
											"name": "PUSH",
											"source": 5,
											"value": "656E000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9250,
											"end": 9252,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9242,
											"end": 9248,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9238,
											"end": 9253,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9231,
											"end": 9260,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9046,
											"end": 9267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9046,
											"end": 9267,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9273,
											"end": 9455,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 9273,
											"end": 9455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9413,
											"end": 9447,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9409,
											"end": 9410,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9401,
											"end": 9407,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9397,
											"end": 9411,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9390,
											"end": 9448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9273,
											"end": 9455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9273,
											"end": 9455,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9461,
											"end": 9641,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 9461,
											"end": 9641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9601,
											"end": 9633,
											"name": "PUSH",
											"source": 5,
											"value": "5573657220646F65736E2774206861766520656E6F75676820746F6B656E0000"
										},
										{
											"begin": 9597,
											"end": 9598,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9589,
											"end": 9595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9585,
											"end": 9599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9578,
											"end": 9634,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9461,
											"end": 9641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9461,
											"end": 9641,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9647,
											"end": 9769,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 9647,
											"end": 9769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9720,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 9738,
											"end": 9743,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9720,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 9720,
											"end": 9744,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9720,
											"end": 9744,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 9720,
											"end": 9744,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9713,
											"end": 9718,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9710,
											"end": 9745,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9700,
											"end": 9763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 9700,
											"end": 9763,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9756,
											"end": 9757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9749,
											"end": 9761,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9700,
											"end": 9763,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 9700,
											"end": 9763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9647,
											"end": 9769,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9647,
											"end": 9769,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9775,
											"end": 9891,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 9775,
											"end": 9891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9845,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 9860,
											"end": 9865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9845,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 9845,
											"end": 9866,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9845,
											"end": 9866,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 9845,
											"end": 9866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9838,
											"end": 9843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9835,
											"end": 9867,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9825,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 9825,
											"end": 9885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9881,
											"end": 9882,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9878,
											"end": 9879,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9871,
											"end": 9883,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9825,
											"end": 9885,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 9825,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9775,
											"end": 9891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9775,
											"end": 9891,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9897,
											"end": 10019,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 9897,
											"end": 10019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9970,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 9988,
											"end": 9993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9970,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 9970,
											"end": 9994,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9970,
											"end": 9994,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 9970,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9963,
											"end": 9968,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9960,
											"end": 9995,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9950,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 9950,
											"end": 10013,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10009,
											"end": 10010,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10007,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9999,
											"end": 10011,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9950,
											"end": 10013,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 9950,
											"end": 10013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9897,
											"end": 10019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9897,
											"end": 10019,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"SwapTokenAToB(uint256)": "9f0f2524",
							"_fixedPrice()": "5432d7f4",
							"_tokenA()": "f3c4469f",
							"_tokenB()": "04ba7f29",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setAddressTokenA(address)": "cbb2a348",
							"setAddressTokenB(address)": "ea74d020",
							"setFixedPrice(uint256)": "73c8c883",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"}],\"name\":\"SwapTokenAToB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_fixedPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_tokenA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_tokenB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"}],\"name\":\"setAddressTokenA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"setAddressTokenB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fixedPrice\",\"type\":\"uint256\"}],\"name\":\"setFixedPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SwapToken.sol\":\"SwapContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"SwapToken.sol\":{\"keccak256\":\"0x34d377f4ab008cbbd8d7fe6a88f02eaec6a0900c1a6c1003a57659f6bfe63af2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ed8f4db787a0f15946f3d2ff6b5255fa08768847aabf71e1062b772da2cc4316\",\"dweb:/ipfs/QmVM694wgo2spmoi5M1iH9YzC86VHbBrGeYyPVqEHuSQ18\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "SwapToken.sol:SwapContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 536,
								"contract": "SwapToken.sol:SwapContract",
								"label": "_tokenA",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 538,
								"contract": "SwapToken.sol:SwapContract",
								"label": "_tokenB",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 540,
								"contract": "SwapToken.sol:SwapContract",
								"label": "_fixedPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							212
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 213,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								212
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 190,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 198,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 197,
												"id": 200,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 212,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 207,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 206,
												"id": 209,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 212,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							524
						]
					},
					"id": 525,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 524,
							"linearizedBaseContracts": [
								524
							],
							"name": "SafeMath",
							"nameLocation": "490:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "717:140:3",
										"statements": [
											{
												"id": 245,
												"nodeType": "UncheckedBlock",
												"src": "727:124:3",
												"statements": [
													{
														"assignments": [
															228
														],
														"declarations": [
															{
																"constant": false,
																"id": 228,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 245,
																"src": "751:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 227,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 232,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 229,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "763:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 230,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "767:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 233,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "786:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 234,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "790:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 240,
														"nodeType": "IfStatement",
														"src": "782:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 238,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 226,
															"id": 239,
															"nodeType": "Return",
															"src": "793:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 242,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "838:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 243,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 226,
														"id": 244,
														"nodeType": "Return",
														"src": "824:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "657:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "668:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:3"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "702:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "708:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:3"
									},
									"scope": 524,
									"src": "641:216:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "1078:113:3",
										"statements": [
											{
												"id": 273,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 259,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "1116:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 260,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "1120:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 266,
														"nodeType": "IfStatement",
														"src": "1112:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 264,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 258,
															"id": 265,
															"nodeType": "Return",
															"src": "1123:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 268,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 250,
																		"src": "1168:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 269,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "1172:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 271,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 258,
														"id": 272,
														"nodeType": "Return",
														"src": "1154:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:3",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1018:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1029:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:3"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1063:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:3"
									},
									"scope": 524,
									"src": "1002:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "1415:417:3",
										"statements": [
											{
												"id": 315,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 287,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "1683:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 294,
														"nodeType": "IfStatement",
														"src": "1679:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 292,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 286,
															"id": 293,
															"nodeType": "Return",
															"src": "1691:16:3"
														}
													},
													{
														"assignments": [
															296
														],
														"declarations": [
															{
																"constant": false,
																"id": 296,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 315,
																"src": "1721:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 295,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 300,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 297,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "1733:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 298,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "1737:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 301,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "1756:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 302,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "1760:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 304,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "1765:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 310,
														"nodeType": "IfStatement",
														"src": "1752:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 308,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 286,
															"id": 309,
															"nodeType": "Return",
															"src": "1768:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 312,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "1813:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 313,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 286,
														"id": 314,
														"nodeType": "Return",
														"src": "1799:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1355:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1366:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:3"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1400:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1406:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:3"
									},
									"scope": 524,
									"src": "1339:493:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2057:114:3",
										"statements": [
											{
												"id": 343,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 329,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "2095:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 336,
														"nodeType": "IfStatement",
														"src": "2091:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 334,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 328,
															"id": 335,
															"nodeType": "Return",
															"src": "2103:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 338,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "2148:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 339,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 322,
																		"src": "2152:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 341,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 328,
														"id": 342,
														"nodeType": "Return",
														"src": "2134:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1997:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2008:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:3"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2042:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2048:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:3"
									},
									"scope": 524,
									"src": "1981:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "2406:114:3",
										"statements": [
											{
												"id": 371,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "2444:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 364,
														"nodeType": "IfStatement",
														"src": "2440:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 362,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 356,
															"id": 363,
															"nodeType": "Return",
															"src": "2452:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 366,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "2497:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 367,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 350,
																		"src": "2501:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 369,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 356,
														"id": 370,
														"nodeType": "Return",
														"src": "2483:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2346:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2357:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:3"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2391:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2397:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:3"
									},
									"scope": 524,
									"src": "2330:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "2822:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 383,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "2839:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 384,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "2843:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 382,
												"id": 386,
												"nodeType": "Return",
												"src": "2832:12:3"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "2768:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "2779:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:3"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "2813:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:3"
									},
									"scope": 524,
									"src": "2755:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "3189:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 398,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "3206:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 399,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "3210:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 397,
												"id": 401,
												"nodeType": "Return",
												"src": "3199:12:3"
											}
										]
									},
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3135:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3146:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:3"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3180:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:3"
									},
									"scope": 524,
									"src": "3122:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "3532:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 413,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "3549:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 414,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "3553:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 412,
												"id": 416,
												"nodeType": "Return",
												"src": "3542:12:3"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3478:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3489:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:3"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3523:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:3"
									},
									"scope": 524,
									"src": "3465:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "3917:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 428,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "3934:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 429,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "3938:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 427,
												"id": 431,
												"nodeType": "Return",
												"src": "3927:12:3"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "3863:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "3874:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:3"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "3908:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:3"
									},
									"scope": 524,
									"src": "3850:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "4466:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 443,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "4483:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 444,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "4487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 442,
												"id": 446,
												"nodeType": "Return",
												"src": "4476:12:3"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4412:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4423:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:3"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "4457:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:3"
									},
									"scope": 524,
									"src": "4399:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "5084:106:3",
										"statements": [
											{
												"id": 471,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 461,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 453,
																		"src": "5126:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 462,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 451,
																		"src": "5131:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 464,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 455,
																	"src": "5134:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 460,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 466,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "5168:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 468,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "5172:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 459,
														"id": 470,
														"nodeType": "Return",
														"src": "5161:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "4981:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "5000:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "5019:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 454,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "5075:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:3"
									},
									"scope": 524,
									"src": "4959:231:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "5799:105:3",
										"statements": [
											{
												"id": 496,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 486,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "5841:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 489,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "5848:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 485,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 491,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 492,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "5882:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 493,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "5886:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 484,
														"id": 495,
														"nodeType": "Return",
														"src": "5875:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "5696:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "5715:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "5734:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 479,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "5790:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:3"
									},
									"scope": 524,
									"src": "5674:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "6675:105:3",
										"statements": [
											{
												"id": 521,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 511,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 503,
																		"src": "6717:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 514,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "6724:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 510,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 516,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 517,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "6758:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 518,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "6762:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 509,
														"id": 520,
														"nodeType": "Return",
														"src": "6751:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6572:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6591:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6610:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 504,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:3"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6666:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:3"
									},
									"scope": 524,
									"src": "6550:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 525,
							"src": "482:6300:3",
							"usedErrors": []
						}
					],
					"src": "107:6676:3"
				},
				"id": 3
			},
			"SwapToken.sol": {
				"ast": {
					"absolutePath": "SwapToken.sol",
					"exportedSymbols": {
						"Context": [
							212
						],
						"IERC20": [
							190
						],
						"Ownable": [
							112
						],
						"SafeMath": [
							524
						],
						"SwapContract": [
							658
						]
					},
					"id": 659,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 526,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 527,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 113,
							"src": "63:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 528,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 525,
							"src": "116:57:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 529,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 191,
							"src": "174:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 530,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "257:7:4"
									},
									"id": 531,
									"nodeType": "InheritanceSpecifier",
									"src": "257:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 658,
							"linearizedBaseContracts": [
								658,
								112,
								212
							],
							"name": "SwapContract",
							"nameLocation": "241:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 534,
									"libraryName": {
										"id": 532,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 524,
										"src": "277:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "271:27:4",
									"typeName": {
										"id": 533,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "290:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f3c4469f",
									"id": 536,
									"mutability": "mutable",
									"name": "_tokenA",
									"nameLocation": "318:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 658,
									"src": "303:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 535,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "303:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "04ba7f29",
									"id": 538,
									"mutability": "mutable",
									"name": "_tokenB",
									"nameLocation": "346:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 658,
									"src": "331:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 537,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "331:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5432d7f4",
									"id": 540,
									"mutability": "mutable",
									"name": "_fixedPrice",
									"nameLocation": "374:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 658,
									"src": "359:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 539,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "359:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 546,
									"name": "Swap",
									"nameLocation": "397:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "410:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "402:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "427:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "419:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:34:4"
									},
									"src": "391:45:4"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "456:2:4",
										"statements": []
									},
									"id": 550,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "453:2:4"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:0:4"
									},
									"scope": 658,
									"src": "442:16:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "514:526:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 560,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "571:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "571:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 557,
																				"name": "_tokenA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "552:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 556,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "545:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "545:15:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 147,
																	"src": "545:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "545:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 563,
																"name": "_amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "586:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "545:49:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5573657220646f65736e2774206861766520656e6f75676820746f6b656e",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "608:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9ec3eb457dbf25fb98a6054a3072f7cc48abe4e290aae2aad74afeaad1b6bef3",
																"typeString": "literal_string \"User doesn't have enough token\""
															},
															"value": "User doesn't have enough token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9ec3eb457dbf25fb98a6054a3072f7cc48abe4e290aae2aad74afeaad1b6bef3",
																"typeString": "literal_string \"User doesn't have enough token\""
															}
														],
														"id": 555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "524:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "524:126:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "524:126:4"
											},
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "669:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 620,
														"src": "661:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 568,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "661:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 577,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "711:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 572,
																	"name": "_fixedPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "694:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 570,
																	"name": "_amountA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "681:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 418,
																"src": "681:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "681:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 433,
														"src": "681:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "681:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "661:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 585,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "780:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SwapContract_$658",
																					"typeString": "contract SwapContract"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SwapContract_$658",
																					"typeString": "contract SwapContract"
																				}
																			],
																			"id": 584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "772:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 583,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "772:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "772:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 580,
																				"name": "_tokenB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "753:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 579,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "746:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "746:15:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 147,
																	"src": "746:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "746:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 588,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "790:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:53:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420646f65736e2774206861766520656e6f75676820746f6b656e",
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "813:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83c9a2dddbb58af270eca1e8866d8233c491c90b62e8d3013a6b5eda146995ed",
																"typeString": "literal_string \"Contract doesn't have enough token\""
															},
															"value": "Contract doesn't have enough token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83c9a2dddbb58af270eca1e8866d8233c491c90b62e8d3013a6b5eda146995ed",
																"typeString": "literal_string \"Contract doesn't have enough token\""
															}
														],
														"id": 578,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "725:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "725:134:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "725:134:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 597,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "899:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "899:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 601,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "919:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SwapContract_$658",
																		"typeString": "contract SwapContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SwapContract_$658",
																		"typeString": "contract SwapContract"
																	}
																],
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "911:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 599,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "911:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "911:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 603,
															"name": "_amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "926:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 594,
																	"name": "_tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "877:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 593,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "870:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "870:15:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "870:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "870:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "870:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 610,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "971:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "971:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 612,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "983:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 607,
																	"name": "_tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "953:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 606,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "946:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "946:15:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 157,
														"src": "946:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "946:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "946:47:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 616,
															"name": "_amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "1013:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 617,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "1023:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "1008:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1008:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "EmitStatement",
												"src": "1003:30:4"
											}
										]
									},
									"functionSelector": "9f0f2524",
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "SwapTokenAToB",
									"nameLocation": "473:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "_amountA",
												"nameLocation": "495:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "487:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:18:4"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:0:4"
									},
									"scope": 658,
									"src": "464:576:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "1107:33:4",
										"statements": [
											{
												"expression": {
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 628,
														"name": "_tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "1117:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 629,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "1127:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1117:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "1117:16:4"
											}
										]
									},
									"functionSelector": "cbb2a348",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 626,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 625,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1097:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1097:9:4"
										}
									],
									"name": "setAddressTokenA",
									"nameLocation": "1055:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1080:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "1072:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1071:16:4"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1107:0:4"
									},
									"scope": 658,
									"src": "1046:94:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "1207:33:4",
										"statements": [
											{
												"expression": {
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 640,
														"name": "_tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "1217:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 641,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "1227:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1217:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "1217:16:4"
											}
										]
									},
									"functionSelector": "ea74d020",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 638,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 637,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1197:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1197:9:4"
										}
									],
									"name": "setAddressTokenB",
									"nameLocation": "1155:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1180:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1172:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:16:4"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1207:0:4"
									},
									"scope": 658,
									"src": "1146:94:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "1308:41:4",
										"statements": [
											{
												"expression": {
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 652,
														"name": "_fixedPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "1318:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 653,
														"name": "fixedPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "1332:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1318:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "1318:24:4"
											}
										]
									},
									"functionSelector": "73c8c883",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 650,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 649,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1298:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1298:9:4"
										}
									],
									"name": "setFixedPrice",
									"nameLocation": "1255:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "fixedPrice",
												"nameLocation": "1277:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "1269:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1269:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1268:20:4"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1308:0:4"
									},
									"scope": 658,
									"src": "1246:103:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 659,
							"src": "232:1119:4",
							"usedErrors": []
						}
					],
					"src": "39:1313:4"
				},
				"id": 4
			}
		}
	}
}